version: 1.0.{build}
clone_folder: c:\projects\nplruntime
image: Visual Studio 2017
environment:
  matrix:
  - addresss_mode: 32
    installer_name: C:\projects\nplruntime\installer\nplruntime_x86.nsi
    zip_name: NPLRuntime_32bit.zip
    zip_path: C:\projects\nplruntime\ParaWorld\bin32
    exe_path: installer\nplruntime_v1.0-alpha.10_Windows_x86.exe
  - addresss_mode: 64
    installer_name: C:\projects\nplruntime\installer\nplruntime_x64.nsi
    zip_name: NPLRuntime_64bit.zip
    zip_path: C:\projects\nplruntime\ParaWorld\bin64
    exe_path: installer\nplruntime_v1.0-alpha.10_Windows_x64.exe
    
matrix:
  fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.
install:

############################################################################
# Install a recent CMake
############################################################################
# - mkdir bin
# - cd bin
# - set CMAKE_URL="https://cmake.org/files/v3.10/cmake-3.10.0-win64-x64.zip"
# - appveyor DownloadFile %CMAKE_URL% -FileName cmake.zip
# - 7z x cmake.zip -oC:\projects\nplruntime\bin > nul
# - move C:\projects\nplruntime\bin\cmake-* C:\projects\nplruntime\bin\cmake # Move to a version-agnostic directory
# - set PATH=C:\projects\nplruntime\bin\cmake\bin;%PATH%
# - cmake --version


#----------------------------#
# manually install boost     #
#----------------------------#
#    appveyor DownloadFile http://dl.bintray.com/boostorg/release/1.65.0/source/boost_1_65_1.tar.bz2 -FileName "C:\projects\nplruntime\Server\trunk\boost.tar.bz2"
#    7z x C:\projects\nplruntime\Server\trunk\boost.tar.bz2 -oC:\projects\nplruntime\Server\trunk\
#    7z x C:\projects\nplruntime\Server\trunk\boost.tar -oC:\projects\nplruntime\Server\trunk\
#    cd C:\projects\nplruntime\Server\trunk\boost_1_65_1\
#    set BOOST_ROOT="C:\projects\nplruntime\Server\trunk\boost_1_65_1"

- cmd: >-
    git submodule init

    git submodule update --init --recursive

    del C:\projects\nplruntime\npl_packages\main\* /q

    rmdir "C:/Program Files/MySQL" /s /q

    rmdir "C:/Program Files/PostgreSQL" /s /q
    
    cd C:\Libraries\boost_1_65_1\

    set BOOST_ROOT=C:\Libraries\boost_1_65_1

    bootstrap.bat

    b2 address-model=%addresss_mode% runtime-link=static threading=multi variant=release --with-thread --with-date_time --with-filesystem --with-system --with-chrono --with-signals --with-serialization --with-iostreams --with-regex stage

    dir %BOOST_ROOT%\stage\lib

    cd C:\projects\nplruntime

    mkdir bin\client

    cd bin\client

    if "%addresss_mode%" == "64" ( cmake ../../Client -DCMAKE_GENERATOR_PLATFORM=x64 ) else ( cmake ../../Client )
    
build_script:
- cmd: >-
    msbuild  c:\projects\nplruntime\bin\client\CLIENT.sln /verbosity:minimal /property:Configuration=Release /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"

    7z a %zip_name% %zip_path%

    "C:/Program Files (x86)/NSIS/makensis" %installer_name%
test: off
artifacts:
- path: installer\nplruntime_v1.0-alpha.10_Windows_x86.exe
  name: execute_32
- path: installer\nplruntime_v1.0-alpha.10_Windows_x64.exe
  name: execute_64
- path: NPLRuntime_32bit.zip
  name: binary_32
- path: NPLRuntime_64bit.zip
  name: binary_64
deploy:
- provider: GitHub
  on:
    branch: master
  tag: v1.0-alpha.10
  release: v1.0-alpha.10(Windows)
  auth_token:
    secure: bBIY9/rjpoYwv0hKiworA8dihkgoZ+L7y4kM8kuYtJw1Z3XM51gdbDUIotOduIza
  artifact: execute_32, binary_32, execute_64, binary_64
  prerelease: true
  
on_finish:
- cmd: 
