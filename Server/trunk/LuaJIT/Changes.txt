Author:LiXizhi

The bytecode generated by Luajit is incompatible with lua, but is cross-platform for any architecture. 
I.e. string.dump(f [,strip]) generates portable bytecode. 
The generated bytecode is portable and can be loaded on any architecture that LuaJIT supports, 
independent of word size or endianess. 

---++ How to build

- luajit2.0.2 /MD /MT compiled and uploaded to svn. The dll is in /bin folder. 
  modify src/msvcbuild.bat to change from /MD to /MT(so that it will be compiled with multi-threaded CRT); then run "msvcbuild.bat"

Edit luaconf.h and change this line from 60 to 120. 
#define LUA_IDSIZE	120

copy output to ./bin

---++ Bytecode generated 
More info, see http://luajit.org/extensions.html:
An extra argument has been added to string.dump(). If set to true, 'stripped' bytecode without debug information is generated. 
This speeds up later bytecode loading and reduces memory usage. See also the -b command line option.
The generated bytecode is portable and can be loaded on any architecture that LuaJIT supports, independent of word size or 
endianess. However the bytecode compatibility versions must match. Bytecode stays compatible for dot releases (x.y.0 ¡ú x.y.1), 
but may change with major or minor releases (2.0 ¡ú 2.1) or between any beta release. 
Foreign bytecode (e.g. from Lua 5.1) is incompatible and cannot be loaded. 
