                                  _   _ ____  _
                              ___| | | |  _ \| |
                             / __| | | | |_) | |
                            | (__| |_| |  _ <| |___
                             \___|\___/|_| \_\_____|

                                  Changelog

Version 7.47.1 (8 Feb 2016)

Daniel Stenberg (8 Feb 2016)
- RELEASE-NOTES: curl 7.47.1 time!

Jay Satiro (8 Feb 2016)
- tool_operhlp: Check for backslashes in get_url_file_name
  
  Extract the filename from the last slash or backslash. Prior to this
  change backslashes could be part of the filename.
  
  This change needed for the curl tool built for Cygwin. Refer to the
  CYGWIN addendum in advisory 20160127B.
  
  Bug: https://curl.haxx.se/docs/adv_20160127B.html

Daniel Stenberg (7 Feb 2016)
- RELEASE-NOTES: synced with d6a8869ea34

Jay Satiro (6 Feb 2016)
- openssl: Fix signed/unsigned mismatch warning in X509V3_ext
  
  sk_X509_EXTENSION_num may return an unsigned integer, however the value
  will fit in an int.
  
  Bug: https://github.com/curl/curl/commit/dd1b44c#commitcomment-15913896
  Reported-by: Gisle Vanem

Daniel Stenberg (7 Feb 2016)
- TODO: 17.11 -w output to stderr

Jay Satiro (6 Feb 2016)
- [Michael Kaufmann brought this change]

  idn_win32: Better error checking
  
  .. also fix a conversion bug in the unused function
  curl_win32_ascii_to_idn().
  
  And remove wprintfs on error (Jay).
  
  Bug: https://github.com/curl/curl/pull/637

- [Gisle Vanem brought this change]

  examples/asiohiper: Avoid function name collision on Windows
  
  closesocket => close_socket
  Winsock already has the former.
  
  Bug: https://curl.haxx.se/mail/lib-2016-02/0016.html

- [Gisle Vanem brought this change]

  examples/htmltitle: Use _stricmp on Windows
  
  Bug: https://curl.haxx.se/mail/lib-2016-02/0017.html

Daniel Stenberg (6 Feb 2016)
- COPYING: clarify that Daniel is not the sole author
  
  ... done on request and as it is a fair point.

Jay Satiro (5 Feb 2016)
- unit1604: Fix unit setup return code

- tool_doswin: Use type SANITIZEcode in sanitize_file_name

- tool_doswin: Improve sanitization processing
  
  - Add unit test 1604 to test the sanitize_file_name function.
  
  - Use -DCURL_STATICLIB when building libcurltool for unit testing.
  
  - Better detection of reserved DOS device names.
  
  - New flags to modify sanitize behavior:
  
  SANITIZE_ALLOW_COLONS: Allow colons
  SANITIZE_ALLOW_PATH: Allow path separators and colons
  SANITIZE_ALLOW_RESERVED: Allow reserved device names
  SANITIZE_ALLOW_TRUNCATE: Allow truncating a long filename
  
  - Restore sanitization of banned characters from user-specified outfile.
  
  Prior to this commit sanitization of a user-specified outfile was
  temporarily disabled in 2b6dadc because there was no way to allow path
  separators and colons through while replacing other banned characters.
  Now in such a case we call the sanitize function with
  SANITIZE_ALLOW_PATH which allows path separators and colons to pass
  through.
  
  
  Closes https://github.com/curl/curl/issues/624
  Reported-by: Octavio Schroeder

- [Viktor Szakats brought this change]

  URLs: change more http to https

- sasl_sspi: Fix memory leak in domain populate
  
  Free an existing domain before replacing it.
  
  Bug: https://github.com/curl/curl/issues/635
  Reported-by: silveja1@users.noreply.github.com

Daniel Stenberg (4 Feb 2016)
- [Viktor Szakats brought this change]

  URLs: follow GitHub project rename (also Travis CI)
  
  Closes #632

- CHANGES.o: fix references to curl.haxx.nu
  
  I removed the scheme prefix from the URLs references this host name, as
  we don't own/run that anymore but the name is kept for historic reasons.

- HISTORY: add some info about when we used which host names

Jay Satiro (2 Feb 2016)
- [Viktor Szakats brought this change]

  URLs: change more http to https

Dan Fandrich (3 Feb 2016)
- URLs: Change more haxx.se URLs from http: to https:

Daniel Stenberg (3 Feb 2016)
- RELEASE-NOTES: synced with 4af40b364

- URLs: change all http:// URLs to https://

- configure: update the copyright year range in output

- dotdot: allow an empty input string too
  
  It isn't used by the code in current conditions but for safety it seems
  sensible to at least not crash on such input.
  
  Extended unit test 1395 to verify this too as well as a plain "/" input.

- HTTPS: update a bunch of URLs from HTTP to HTTPS

- [Sergei Nikulov brought this change]

  AppVeyor: updated to handle OpenSSL/WinSSL builds
  
  Closes #621

Jay Satiro (1 Feb 2016)
- tool_operate: Don't sanitize --output path (Windows)
  
  Due to path separators being incorrectly sanitized in --output
  pathnames, eg -o c:\foo => c__foo
  
  This is a partial revert of 3017d8a until I write a proper fix. The
  remote-name will continue to be sanitized, but if the user specified an
  --output with string replacement (#1, #2, etc) that data is unsanitized
  until I finish a fix.
  
  Bug: https://github.com/bagder/curl/issues/624
  Reported-by: Octavio Schroeder

- curl.1: Explain remote-name behavior if file already exists
  
  .. also warn about letting the server pick the filename.

- [Gisle Vanem brought this change]

  urldata: Error on missing SSL backend-specific connect info

Daniel Stenberg (28 Jan 2016)
- bump: towards the next (7.47.1 ?)

- [Sergei Nikulov brought this change]

  cmake: fixed when OpenSSL enabled on Windows and schannel detected
  
  Closes #617

Jay Satiro (28 Jan 2016)
- [Sergei Nikulov brought this change]

  urldata: moved common variable out of ifdef
  
  Closes https://github.com/bagder/curl/pull/618

- [Viktor Szakats brought this change]

  tool_doswin: silence unused function warning
  
  tool_doswin.c:185:14: warning: 'msdosify' defined but not used
  [-Wunused-function]
  
  Closes https://github.com/bagder/curl/pull/616

Daniel Stenberg (27 Jan 2016)
- getredirect.c: fix variable name
  
  Reported-by: Bernard Spil

Version 7.47.0 (27 Jan 2016)

Daniel Stenberg (27 Jan 2016)
- examples/Makefile.inc: specify programs without .c!

- THANKS: 6 new contributors from 7.47.0 release notes

- [Isaac Boukris brought this change]

  NTLM: Fix ConnectionExists to compare Proxy credentials
  
  Proxy NTLM authentication should compare credentials when
  re-using a connection similar to host authentication, as it
  authenticate the connection.
  
  Example:
  curl -v -x http://proxy:port http://host/ -U good_user:good_pwd
    --proxy-ntlm --next -x http://proxy:port http://host/
      [-U fake_user:fake_pwd --proxy-ntlm]
  
  CVE-2016-0755
  
  Bug: http://curl.haxx.se/docs/adv_20160127A.html

- [Ray Satiro brought this change]

  curl: avoid local drive traversal when saving file (Windows)
  
  curl does not sanitize colons in a remote file name that is used as the
  local file name. This may lead to a vulnerability on systems where the
  colon is a special path character. Currently Windows/DOS is the only OS
  where this vulnerability applies.
  
  CVE-2016-0754
  
  Bug: http://curl.haxx.se/docs/adv_20160127B.html

- RELEASE-NOTES: 7.47.0

- FAQ: language fix in 4.19

- [paulehoffman brought this change]

  FAQ: Update to point to GitHub
  
  Current FAQ didn't make it clear where the main repo is.
  
  Closes #612

- maketgz: generate date stamp with LC_TIME=C
  
  bug: http://curl.haxx.se/mail/lib-2016-01/0123.html

- curl_multi_socket_action.3: line wrap

- RELEASE-NOTES: synced with d58ba66eeceb

Steve Holme (21 Jan 2016)
- TODO: "Create remote directories" for SMB

Jay Satiro (18 Jan 2016)
- mbedtls: Fix pinned key return value on fail
  
  - Switch from verifying a pinned public key in a callback during the
  certificate verification to inline after the certificate verification.
  
  The callback method had three problems:
  
  1. If a pinned public key didn't match, CURLE_SSL_PINNEDPUBKEYNOTMATCH
  was not returned.
  
  2. If peer certificate verification was disabled the pinned key
  verification did not take place as it should.
  
  3. (related to #2) If there was no certificate of depth 0 the callback
  would not have checked the pinned public key.
  
  Though all those problems could have been fixed it would have made the
  code more complex. Instead we now verify inline after the certificate
  verification in mbedtls_connect_step2.
  
  Ref: http://curl.haxx.se/mail/lib-2016-01/0047.html
  Ref: https://github.com/bagder/curl/pull/601

- tests: Add a test for pinnedpubkey fail even when insecure
  
  Because disabling the peer verification (--insecure) must not disable
  the public key pinning check (--pinnedpubkey).

- [Daniel Schauenberg brought this change]

  CURLINFO_RESPONSE_CODE.3: add example

Kamil Dudka (15 Jan 2016)
- ssh: make CURLOPT_SSH_PUBLIC_KEYFILE treat "" as NULL
  
  The CURLOPT_SSH_PUBLIC_KEYFILE option has been documented to handle
  empty strings specially since curl-7_25_0-31-g05a443a but the behavior
  was unintentionally removed in curl-7_38_0-47-gfa7d04f.
  
  This commit restores the original behavior and clarifies it in the
  documentation that NULL and "" have both the same meaning when passed
  to CURLOPT_SSH_PUBLIC_KEYFILE.
  
  Bug: http://curl.haxx.se/mail/lib-2016-01/0072.html

Daniel Stenberg (14 Jan 2016)
- RELEASE-NOTES: synced with 35083ca60ed035a

- openssl: improved error detection/reporting
  
  ... by extracting the LIB + REASON from the OpenSSL error code. OpenSSL
  1.1.0+ returned a new func number of another cerfificate fail so this
  required a fix and this is the better way to catch this error anyway.

- openssl: for 1.1.0+ they now provide a SSLeay() macro of their own

- CURLOPT_RESOLVE.3: minor language polish

- configure: assume IPv6 works when cross-compiled
  
  The configure test uses AC_TRY_RUN to figure out if an ipv6 socket
  works, and testing like that doesn't work for cross-compiles. These days
  IPv6 support is widespread so a blind guess is probably more likely to
  be 'yes' than 'no' now.
  
  Further: anyone who cross-compiles can use configure's --disable-ipv6 to
  explicitly disable IPv6 and that also works for cross-compiles.
  
  Made happen after discussions in issue #594

- TODO: "Try to URL encode given URL"
  
  Closes #514

- ConnectionExists: only do pipelining/multiplexing when asked
  
  When an HTTP/2 upgrade request fails (no protocol switch), it would
  previously detect that as still possible to pipeline on (which is
  acorrect) and do that when PIPEWAIT was enabled even if pipelining was
  not explictily enabled.
  
  It should only pipelined if explicitly asked to.
  
  Closes #584

- [Mohammad AlSaleh brought this change]

  lib: Prefix URLs with lower-case protocol names/schemes
  
  Before this patch, if a URL does not start with the protocol
  name/scheme, effective URLs would be prefixed with upper-case protocol
  names/schemes. This behavior might not be expected by library users or
  end users.
  
  For example, if `CURLOPT_DEFAULT_PROTOCOL` is set to "https". And the
  URL is "hostname/path". The effective URL would be
  "HTTPS://hostname/path" instead of "https://hostname/path".
  
  After this patch, effective URLs would be prefixed with a lower-case
  protocol name/scheme.
  
  Closes #597
  
  Signed-off-by: Mohammad AlSaleh <CE.Mohammad.AlSaleh@gmail.com>

- [Alessandro Ghedini brought this change]

  scripts: don't generate and install zsh completion when cross-compiling

- [Alessandro Ghedini brought this change]

  scripts: fix zsh completion generation
  
  The script should use the just-built curl, not the system one. This fixes
  zsh completion generation when no system curl is installed.

- [Alessandro Ghedini brought this change]

  zsh.pl: fail if no curl is found
  
  Instead of generation a broken completion file.

- [Michael Kaufmann brought this change]

  IDN host names: Remove the port number before converting to ACE
  
  Closes #596

Jay Satiro (10 Jan 2016)
- runtests: Add mbedTLS to the SSL backends
  
  .. and enable SSLpinning tests for mbedTLS, BoringSSL and LibreSSL.

Daniel Stenberg (10 Jan 2016)
- [Thomas Glanzmann brought this change]

  mbedtls: implement CURLOPT_PINNEDPUBLICKEY

Jay Satiro (9 Jan 2016)
- [Tatsuhiro Tsujikawa brought this change]

  url: Fix compile error with --enable-werror

- [Tatsuhiro Tsujikawa brought this change]

  http2: Ensure that http2_handle_stream_close is called
  
  Previously, when HTTP/2 is enabled and used, and stream has content
  length known, Curl_read was not called when there was no bytes left to
  read. Because of this, we could not make sure that
  http2_handle_stream_close was called for every stream. Since we use
  http2_handle_stream_close to emit trailer fields, they were
  effectively ignored. This commit changes the code so that Curl_read is
  called even if no bytes left to read, to ensure that
  http2_handle_stream_close is called for every stream.
  
  Discussed in https://github.com/bagder/curl/pull/564

Daniel Stenberg (8 Jan 2016)
- http2: handle the received SETTINGS frame
  
  This regression landed in 5778e6f5 and made libcurl not act on received
  settings and instead stayed with its internal defaults.
  
  Bug: http://curl.haxx.se/mail/lib-2016-01/0031.html
  Reported-by: Bankde

- Revert "multiplex: allow only once HTTP/2 is actually used"
  
  This reverts commit 46cb70e9fa81c9a56de484cdd7c5d9d0d9fbec36.
  
  Bug: http://curl.haxx.se/mail/lib-2016-01/0031.html

Jay Satiro (8 Jan 2016)
- [Tatsuhiro Tsujikawa brought this change]

  http2: Fix PUSH_PROMISE headers being treated as trailers
  
  Discussed in https://github.com/bagder/curl/pull/564

Daniel Stenberg (8 Jan 2016)
- [Michael Kaufmann brought this change]

  connection reuse: IDN host names fixed
  
  Use the ACE form of IDN hostnames as key in the connection cache.  Add
  new tests.
  
  Closes #592

- tests: mark IPv6 FTP and FTPS tests with the FTP keyword

Jay Satiro (7 Jan 2016)
- mbedtls: Fix ALPN support
  
  - Fix ALPN reply detection.
  
  - Wrap nghttp2 code in ifdef USE_NGHTTP2.
  
  
  Prior to this change ALPN and HTTP/2 did not work properly in mbedTLS.

- http2: Fix client write for trailers on stream close
  
  Check that the trailer buffer exists before attempting a client write
  for trailers on stream close.
  
  Refer to comments in https://github.com/bagder/curl/pull/564

Daniel Stenberg (7 Jan 2016)
- COPYING: update general copyright year range

- ConnectionExists: add missing newline in infof() call
  
  Mistake from commit a464f33843ee1

- multiplex: allow only once HTTP/2 is actually used
  
  To make sure curl doesn't allow multiplexing before a connection is
  upgraded to HTTP/2 (like when Upgrade: h2c fails), we must make sure the
  connection uses HTTP/2 as well and not only check what's wanted.
  
  Closes #584
  
  Patch-by: c0ff

Jay Satiro (4 Jan 2016)
- curl_global_init.3: Add Windows-specific info for init via DLL
  
  - Add to both curl_global_init.3 and libcurl.3 the caveat for Windows
  that initializing libcurl via a DLL's DllMain or static initializer
  could cause a deadlock.
  
  Bug: https://github.com/bagder/curl/issues/586
  Reported-by: marc-groundctl@users.noreply.github.com

Daniel Stenberg (4 Jan 2016)
- FAQ: clarify who to mail about ECCN clarifications

- progressfunc.c: spellfix description

- docs/examples/multi-app.c: fix bad desc formatting

- examples: added descriptions

- example/simple.c: add description

- getredirect.c: a new example

Marc Hoersken (27 Dec 2015)
- RELEASE-NOTES: add 5e0e81a9c4e35f04ca

Daniel Stenberg (26 Dec 2015)
- RELEASE-NOTES: synced with 2aec4359db1088b10d

Marc Hoersken (26 Dec 2015)
- test 1515: add data check

- test 1515: add MSYS support by passing a relative path
  
  MSYS would otherwise turn a /-style path into a C:\-style path.

- test 539: use datacheck mode text for ASCII-mode LISTings
  
  While still using datacheck mode binary for the inline reply data.

- runtests.pl: check up to 5 data parts with different text modes
  
  Move the text-mode conversion for reply/replycheck from the verify
  section into the load section and add support for 4 more check parts.

Daniel Stenberg (24 Dec 2015)
- CURLOPT_RANGE: for HTTP servers, range support is optional

Marc Hoersken (24 Dec 2015)
- tests 1048 and 1050: use datacheck mode text for ASCII-mode LISTings

- tests 706 and 707: use datacheck mode text for ASCII-mode LISTings

- tests 400,403,406: use datacheck mode text for ASCII-mode LISTings

- sockfilt.c: fix calculation of sleep timeout on Windows
  
  Not converting to double caused small timeouts to be skipped.

- tests first.c: fix calculation of sleep timeout on Windows
  
  Not converting to double caused small timeouts to be skipped.

- test 573: add more debug output

- ftplistparser.c: fix handling of file LISTings using Windows EOL
  
  Previously file.txt[CR][LF] would have been returned as file.tx
  (without the last t) if filetype is symlink. Now the t is
  included and the internal item_length includes the zero byte.
  
  Spotted using test 576 on Windows.

- test 16: fix on Linux (and Windows) by using plain ASCII characters
  
  Follow up on b064ff0c351bb287557228575ef4c1d079b866fb, thanks Daniel.

- tftpd server: add Windows support by writing files in binary mode

- tests 252-255: use datacheck mode text for ASCII-mode LISTings

- test 16: fix on Windows by converting data file from ANSI to UTF-8

Daniel Stenberg (23 Dec 2015)
- Makefile.inc: s/curl_SOURCES/CURL_FILES
  
  This allows the root Makefile.am to include the Makefile.inc without
  causing automake to warn on it (variables named *_SOURCES are
  magic). curl_SOURCES is then instead assigned properly in
  src/Makefile.am only.
  
  Closes #577

- [Anders Bakken brought this change]

  ConnectionExists: with *PIPEWAIT, wait for connections
  
  Try harder to prevent libcurl from opening up an additional socket when
  CURLOPT_PIPEWAIT is set. Accomplished by letting ongoing TCP and TLS
  handshakes complete first before the decision is made.
  
  Closes #575

- [Anders Bakken brought this change]

  Add .dir-locals and set c-basic-offset to 2.
  
  This makes it easier for emacs users to automatically get the right
  2-space indentation when they edit curl source files.
  
  c++-mode is in there as well because Emacs can't easily know if
  something is a C or C++ header.
  
  Closes #574

- [Johannes Schindelin brought this change]

  configure: detect IPv6 support on Windows
  
  This patch was "nicked" from the MINGW-packages project by Daniel.
  
  https://github.com/Alexpux/MINGW-packages/commit/9253d0bf58a1486e91f7efb5316e7fdb48fa4007
  Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>

- configure: allow static builds on mingw
  
  This patch is adopted from the MINGW-packages project. It makes it
  possible to build curl both shared and static again.
  
  URL: https://github.com/Alexpux/MINGW-packages/tree/master/mingw-w64-curl

Marc Hoersken (17 Dec 2015)
- test 1326: fix file check since curl is outputting binary data

- test 1326: fix getting stuck on Windows due to incomplete request
  
  The request needs to be read and send in binary mode in order to use
  CRLF instead of LF. Adding --upload-file - causes curl to read stdin
  in binary mode.

Daniel Stenberg (17 Dec 2015)
- RELEASE-NOTES: command line option recount

Dan Fandrich (16 Dec 2015)
- scripts/Makefile: build zsh script even in an out-of-tree build

Marc Hoersken (16 Dec 2015)
- sockfilt.c: added some debug output to select_ws

- sockfilt.c: keep lines shorter than 80 chars

- sockfilt.c: do not wait on unreliable file or pipe handle
  
  The previous implementation caused issues on modern MSYS2 runtimes.

Daniel Stenberg (16 Dec 2015)
- cyassl: deal with lack of *get_peer_certificate
  
  The function is only present in wolfssl/cyassl if it was built with
  --enable-opensslextra. With these checks added, pinning support is disabled
  unless the TLS lib has that function available.
  
  Also fix the mistake in configure that checks for the wrong lib name.
  
  Closes #566

- wolfssl: handle builds without SSLv3 support

- [Tatsuhiro Tsujikawa brought this change]

  http2: Support trailer fields
  
  This commit adds trailer support in HTTP/2.  In HTTP/1.1, chunked
  encoding must be used to send trialer fields.  HTTP/2 deprecated any
  trandfer-encoding, including chunked.  But trailer fields are now
  always available.
  
  Since trailer fields are relatively rare these days (gRPC uses them
  extensively though), allocating buffer for trailer fields is done when
  we detect that HEADERS frame containing trailer fields is started.  We
  use Curl_add_buffer_* functions to buffer all trailers, just like we
  do for regular header fields.  And then deliver them when stream is
  closed.  We have to be careful here so that all data are delivered to
  upper layer before sending trailers to the application.
  
  We can deliver trailer field one by one using NGHTTP2_ERR_PAUSE
  mechanism, but current method is far more simple.
  
  Another possibility is use chunked encoding internally for HTTP/2
  traffic.  I have not tested it, but it could add another overhead.
  
  Closes #564

- RELEASE-NOTES: synced with 6c2c019654e658a

Jay Satiro (15 Dec 2015)
- x509asn1: Fix host altname verification
  
  - In Curl_verifyhost check all altnames in the certificate.
  
  Prior to this change only the first altname was checked. Only the GSKit
  SSL backend was affected by this bug.
  
  Bug: http://curl.haxx.se/mail/lib-2015-12/0062.html
  Reported-by: John Kohl

Daniel Stenberg (15 Dec 2015)
- curl --expect100-timeout: added
  
  This is the new command line option to set the value for the existing
  libcurl option CURLOPT_EXPECT_100_TIMEOUT_MS

- cyassl: fix compiler warning on type conversion

- curlver: the pending release will become 7.47.0

- [Anders Bakken brought this change]

  setstropt: const-correctness
  
  Closes #565

- ROADMAP: implemented HTTP2 for HTTPS-only

- HTTP2.md: spell fix and remove TODO now implemented

- libressl: the latest openssl x509 funcs are not in libressl

- curl: use 2TLS by default
  
  Make this the default for the curl tool (if built with HTTP/2 powers
  enabled) unless a specific HTTP version is requested on the command
  line.
  
  This should allow more users to get HTTP/2 powers without having to
  change anything.

- http: add libcurl option to allow HTTP/2 for HTTPS only
  
  ... and stick to 1.1 for HTTP. This is in line with what browsers do and
  should have very little risk.

- openssl: adapt to openssl >= 1.1.0 X509 opaque structs
  
  Closes #491

- openssl: avoid BIO_reset() warnings since it returns a value

- openssl: adapt to 1.1.0+ name changes

- scripts/makefile: add standard header

- scripts/Makefile: fix GNUism and survive no perl
  
  Closes #555
  
  Reported-by: Thomas Klausner

- fix b6d5cb40d7038fe

- [Tatsuhiro Tsujikawa brought this change]

  http2: Fix hanging paused stream
  
  When NGHTTP2_ERR_PAUSE is returned from data_source_read_callback, we
  might not process DATA frame fully.  Calling nghttp2_session_mem_recv()
  again will continue to process DATA frame, but if there is no incoming
  frames, then we have to call it again with 0-length data.  Without this,
  on_stream_close callback will not be called, and stream could be hanged.
  
  Bug: http://curl.haxx.se/mail/lib-2015-11/0103.html
  Reported-by: Francisco Moraes

- [Christian Stewart brought this change]

  build: fix compilation error with CURL_DISABLE_VERBOSE_STRINGS
  
  With curl disable verbose strings in http.c the compilation fails due to
  the data variable being undefined later on in the function.
  
  Closes #558

Jay Satiro (7 Dec 2015)
- [Gisle Vanem brought this change]

  config-win32: Fix warning HAVE_WINSOCK2_H undefined

- [Gisle Vanem brought this change]

  openssl: BoringSSL doesn't have CONF_modules_free

- [Gisle Vanem brought this change]

  lwip: Fix compatibility issues with later versions
  
  The name of the header guard in lwIP's <lwip/opt.h> has changed from
  '__LWIP_OPT_H__' to 'LWIP_HDR_OPT_H' (bug #35874 in May 2015).
  
  Other fixes:
  
  - In curl_setup.h, the problem with an old PSDK doesn't apply if lwIP is
  used.
  
  - In memdebug.h, the 'socket' should be undefined first due to lwIP's
  lwip_socket() macro.
  
  - In curl_addrinfo.c lwIP's getaddrinfo() + freeaddrinfo() macros need
  special handling because they were undef'ed in memdebug.h.
  
  - In select.c we can't use preprocessor conditionals inside select if
  MSVC and select is a macro, as it is with lwIP.
  
  http://curl.haxx.se/mail/lib-2015-12/0023.html
  http://curl.haxx.se/mail/lib-2015-12/0024.html

Patrick Monnerat (7 Dec 2015)
- os400: define CURL_VERSION_PSL in ILE/RPG binding

Jay Satiro (7 Dec 2015)
- [Gisle Vanem brought this change]

  version: Add flag CURL_VERSION_PSL for libpsl

- formdata: Check if length is too large for memory
  
  - If the size of the length type (curl_off_t) is greater than the size
  of the size_t type then check before allocating memory to make sure the
  value of length will fit in a size_t without overflow. If it doesn't
  then return CURLE_BAD_FUNCTION_ARGUMENT.
  
  Bug: https://github.com/bagder/curl/issues/425#issuecomment-154518679
  Reported-by: Steve Holme

Steve Holme (3 Dec 2015)
- tests: Corrected copy and pasted comments from commit e643c5c908

Daniel Stenberg (3 Dec 2015)
- curl: remove keepalive #ifdef checks done on libcurl's behalf
  
  They didn't match the ifdef logic used within libcurl anyway so they
  could indeed warn for the wrong case - plus the tool cannot know how the
  lib actually performs at that level.

Steve Holme (2 Dec 2015)
- test947: Corrected typo in test name

- tests: Disable the OAUTHBEARER tests when using a non-default port number
  
  Tests 842, 843, 844, 845, 887, 888, 889, 890, 946, 947, 948 and 949 fail
  if a custom port number is specified via the -b option of runtests.pl.
  
  Suggested by: Kamil Dudka
  Bug: http://curl.haxx.se/mail/lib-2015-12/0003.html

Daniel Stenberg (2 Dec 2015)
- bump: towards next release
  
  for all we know now, it might be called 7.46.1

Version 7.46.0 (1 Dec 2015)

Daniel Stenberg (1 Dec 2015)
- RELEASE-NOTES: updated contributor count for 7.46.0

- THANKS: new contributors from the 7.46.0 release

- THANKS-filter: single Tim Rühsen spelling

- docs/examples: gitignore some more built examples

- RELEASE-NOTES; this bug was never released

- RELEASE-NOTES: synced with e55f15454efacb0

- [Flavio Medeiros brought this change]

  Curl_read_plain: clean up ifdefs that break statements
  
  Closes #546

- http2: convert some verbose output into debug-only output

- http2 push: add missing inits of new stream
  
  - set the correct stream_id for pushed streams
  - init maxdownload and size properly

- http2 push: set weight for new stream
  
  give the new stream the old one's stream_weight internally to avoid
  sending a PRIORITY frame unless asked for it

- curl_setup.h: undef freeaddrinfo in c-ares block to fix build
  
  Fixes warnings 78c25c854a added.

- nonblock: fix setting non-blocking mode for Amiga
  
  IoctlSocket() apparently wants a pointer to a long, passed as a char *
  in its third parameter. This bug was introduced already back in commit
  c5fdeef41d from October 1 2001!
  
  Bug: http://curl.haxx.se/mail/lib-2015-11/0088.html
  Reported-by: Norbert Kett

- zsh install: fix DESTDIR support
  
  Reported-by: Mohammad AlSaleh

Dan Fandrich (27 Nov 2015)
- lib: Only define curl_dofreeaddrinfo if struct addrinfo is available

Steve Holme (27 Nov 2015)
- tool_paramhlp: Fixed display of URL index in password prompt for --next
  
  Commit f3bae6ed73 added the URL index to the password prompt when using
  --next. Unfortunately, because the size_t specifier (%zu) is not
  supported by all sprintf() implementations we use the curl_off_t format
  specifier instead. The display of an incorrect value arises on platforms
  where size_t and curl_off_t are of a different size.

Daniel Stenberg (25 Nov 2015)
- timecond: do not add if-modified-since without timecondition
  
  The RTSP code path didn't skip adding the if-modified-since for certain
  RTSP code paths, even if CURLOPT_TIMECONDITION was set to
  CURL_TIMECOND_NONE.
  
  Also, an unknown non-zero CURLOPT_TIMECONDITION value no longer equals
  CURL_TIMECOND_IFMODSINCE.
  
  Bug: http://stackoverflow.com/questions/33903982/curl-timecond-none-doesnt-work-how-to-remove-if-modified-since-header

- RELEASE-NOTES: synced with 99d17a5e2ba77e58

- examples/README: cut out the incomplete list
  
  ... and add a generic explanation for them instead. Each example file
  should contain its own description these days.

- test1513: make sure the callback is only called once

- [Daniel Shahaf brought this change]

  build: Install zsh completion
  
  Fixes #534
  Closes #537

- done: make sure the final progress update is made
  
  It would previously be skipped if an existing error was returned, but
  would lead to a previous value being left there and later used.
  CURLINFO_TOTAL_TIME for example.
  
  Still it avoids that final progress update if we reached DONE as the
  result of a callback abort to avoid another callback to be called after
  an abort-by-callback.
  
  Reported-by: Lukas Ruzicka
  
  Closes #538

- curl: expanded the -XHEAD warning text
  
  ... to also mention the specific options used.

- Revert "cleanup: general removal of TODO (and similar) comments"
  
  This reverts commit 64e959ffe37c436503f9fed1ce2d6ee6ae50bd9a.
  
  Feedback-by: Dan Fandrich
  URL: http://curl.haxx.se/mail/lib-2015-11/0062.html

- CURLOPT_HEADERFUNCTION.3: fix typo
  
  Refer to _HEADERDATA not _WRITEDATA.
  
  Reported-by: Michał Piechowski

- TODO: TCP Fast Open

Steve Holme (22 Nov 2015)
- examples: Added website parse-able descriptions to the e-mail examples

- TODO: Added another 'multi-interface' idea

- smb.c: Fixed compilation warnings
  
  smb.c:134:3: warning: conversion to 'short unsigned int' from 'int' may
               alter its value
  smb.c:146:42: warning: conversion to 'unsigned int' from 'long long
                unsigned int' may alter its value
  smb.c:146:65: warning: conversion to 'unsigned int' from 'long long
                unsigned int' may alter its value

- schannel: Corrected copy/paste error in commit 8d17117683

- schannel: Use GetVersionEx() when VerifyVersionInfo() isn't available
  
  Regression from commit 7a8e861a5 as highlighted in the msys autobuilds.

- examples: Fixed compilation warnings
  
  pop3-multi.c:96:5: warning: implicit declaration of function 'memset'
  imap-multi.c:96:5: warning: implicit declaration of function 'memset'
  http2-download.c:226:5: warning: implicit declaration of function 'memset'
  http2-upload.c:290:5: warning: implicit declaration of function 'memset'
  http2-upload.c:290:5: warning: implicit declaration of function 'memset'

- Makefile.inc: Fixed test run error
  
  test845 not present in tests/data/Makefile.inc

Daniel Stenberg (20 Nov 2015)
- TODO: remove duplicated title

- TODO: added two more libcurl ideas
  
  Moved some ideas from "next major" to just ordinary ideas since we can
  always add new things while keeping the old without doing a "next
  major".

Steve Holme (20 Nov 2015)
- tests: Re-enabled tests 889 and 890 following POP3 fix

- pop3: Differentiate between success and continuation responses

- pop3: Added clarity on some server response codes

Daniel Stenberg (20 Nov 2015)
- [Daniel Shahaf brought this change]

  build: Fix theoretical infinite loops
  
  Add error-checking to 'cd' in a few cases where omitting the checks
  might result in an infinite loop.
  
  Closes #535

Patrick Monnerat (19 Nov 2015)
- curl.h: s/#defien/#define/

- os400: synchronize ILE/RPG header file

- os400: Provide options for libssh2 use in compile scripts. Adjust README.

Daniel Stenberg (19 Nov 2015)
- [danielsh@apache.org brought this change]

  zsh completion: Preserve single quotes in output
  
  When an option's help string contains literal single quotes, those
  single quotes would be stripped from the option's description in the
  completion output (unless the zsh RC_QUOTES option were set while the
  completion function was being sourced, which is not the default).  This
  patch makes the completion output contain single quotes where the --help
  output does.
  
  Closes #532

Jay Satiro (18 Nov 2015)
- [MaxGiting brought this change]

  FAQ: Grammar changes
  
  Closes https://github.com/bagder/curl/pull/533

Daniel Stenberg (17 Nov 2015)
- http2: http_done: don't free already-freed push headers
  
  The push headers are freed after the push callback has been invoked,
  meaning this code should only free the headers if the callback was never
  invoked and thus the headers weren't freed at that time.
  
  Reported-by: Davey Shafik

- [Anders Bakken brought this change]

  getconnectinfo: Don't call recv(2) if socket == -1
  
  Closes #528

- CURLMOPT_PUSHFUNCTION.3: *_byname() returns only the first header
  
  ... if there are more than one using the same name

- http2: minor comment typo

- sasl; fix checksrc warnings

Steve Holme (15 Nov 2015)
- RELEASE-NOTES: Adjusted for the recent OAuth 2.0 activity

- tests: Disabled 889 and 890 until we support POP3 continuation responses
  
  As POP3 final and continuation responses both begin with a + character,
  and both the finalcode and contcode variables in SASLprotoc are set as
  such, we cannot tell the difference between them when we are expecting
  an optional continuation from the server such as the following:
  
  + something else from the server
  +OK final response
  
  Disabled these tests until such a time we can tell the responses apart.

- tests: Corrected typos from commit ba4d8f7eba

- tests: Added OAUTHBEARER failure response tests

- oauth2: Support OAUTHBEARER failures sent as continuation responses
  
  According to RFC7628 a failure message may be sent by the server in a
  base64 encoded JSON string as a continuation response.
  
  Currently only implemented for OAUTHBEARER and not XAUTH2.

Daniel Stenberg (15 Nov 2015)
- RELEASE-NOTES: synced with 808a17ee675

Steve Holme (14 Nov 2015)
- tests: Renamed existing OAuth 2.0 (XOAUTH) tests

- tests: Added OAuth 2.0 (OAUTHBEARER) tests

- oauth2: Added support for OAUTHBEARER SASL mechanism to IMAP, POP3 and SNMP
  
  OAUTHBEARER is now the official "registered" SASL mechanism name for
  OAuth 2.0. However, we don't want to drop support for XOAUTH2 as some
  servers won't support the new mechanism yet.

Daniel Stenberg (13 Nov 2015)
- RELEASE-NOTES: recounted curl_easy_setopt() options

- typecheck-gcc.h: add missing slist-using options
  
  CURLOPT_RESOLVE and CURLOPT_PROXYHEADER were missing
  
  Also sorted the list.

- typecheck-gcc.h: added CURLOPT_CLOSESOCKETDATA
  
  ... and sorted curl_is_cb_data_option alphabetically

Jay Satiro (13 Nov 2015)
- [Sebastian Pohlschmidt brought this change]

  openssl: Free modules on cleanup
  
  Curl_ossl_init calls OPENSSL_load_builtin_modules() but
  Curl_ossl_cleanup doesn't make a call to free these modules.
  
  Bug: https://github.com/bagder/curl/issues/526

Steve Holme (13 Nov 2015)
- symbols-in-versions: Added new CURLOPTTYPE_STRINGPOINT alias
  
  ...following commit aba281e762 to fix test 1119.

Daniel Stenberg (13 Nov 2015)
- curl: mark two more options strings for --libcurl output

- typecheck-gcc.h: add some missing string types
  
  Also sorted that list alphabetically

- curl.h: introducing the STRINGPOINT alias
  
  As an alias for OBJECTPOINT. Provided to allow us to grep for all string
  options easier.

- cleanup: general removal of TODO (and similar) comments
  
  They tend to never get updated anyway so they're frequently inaccurate
  and we never go back to revisit them anyway. We document issues to work
  on properly in KNOWN_BUGS and TODO instead.

- ftplistparser: remove empty function

- openssl: remove #if check for 0.9.7 for ENGINE_load_private_key

- openssl: all supported versions have X509_STORE_set_flags
  
  Simplify by removing #ifdefs and macros

- openssl: remove 0.9.3 check

- openssl: remove #ifdefs for < 0.9.5 support
  
  We only support >= 0.9.7

- lib/vtls/openssl: remove unused traces of yassl ifdefs

Dan Fandrich (12 Nov 2015)
- [dfandrich brought this change]

  unit1603: Demote hash mismatch failure to a warning
  
  The hashes can vary between architectures (e.g. Sparc differs from x86_64).
  This is not a fatal problem but just reduces the coverage of these white-box
  tests, as the assumptions about into which hash bucket each key falls are no
  longer valid.

- [dfandrich brought this change]

  unit1603: Added unit tests for hash functions

- [dfandrich brought this change]

  unit1602: Fixed failure in torture test

Steve Holme (12 Nov 2015)
- sasl: Re-introduced XOAUTH2 in the default enabled authentication mechanism
  
  Following the fix in commit d6d58dd558 it is necessary to re-introduce
  XOAUTH2 in the default enabled authentication mechanism, which was
  removed in commit 7b2012f262, otherwise users will have to specify
  AUTH=XOAUTH2 in the URL.
  
  Note: OAuth 2.0 will only be used when the bearer is specified.

- [Stefan Bühler brought this change]

  sasl_sspi: fix identity memory leak in digest authentication

- [Stefan Bühler brought this change]

  sasl_sspi: fixed unicode build for digest authentication
  
  Closes #525

- oauth2: Re-factored OAuth 2.0 state variable

- sasl: Don't choose OAuth 2.0 if mechanism not advertised
  
  Regression from commit 9e8ced9890 which meant if --oauth2-bearer was
  specified but the SASL mechanism wasn't supported by the server then
  the mechanism would be chosen.

Daniel Stenberg (12 Nov 2015)
- runtests: more compact "System characteristics" output
  
  - no point in repeating curl features that is already listed as features
    from the curl -V output
  
  - remove the port numbers/unix domain path from the output unless
    verbose is used, as that is rarely interesting to users.

- runtests: rename conditional curl-features to $has_[name]

Steve Holme (11 Nov 2015)
- oauth2: Introduced support for host and port details
  
  Added support to the OAuth 2.0 message function for host and port, in
  order to accommodate the official OAUTHBEARER SASL mechanism which is
  to be added shortly.

- curl_setup.h: Removed duplicate CURL_DISABLE_RTSP when HTTP_ONLY defined

- cmake: Add missing feature macros in config header (Part 2)
  
  In addition to commit a215381c94 added the RTSP, RTMP and SMB protocols.

Daniel Stenberg (10 Nov 2015)
- [Douglas Creager brought this change]

  cmake: Add missing feature macros in config header
  
  The curl_config.h file can be generated either from curl_config.h.cmake
  or curl_config.h.in, depending on whether you're building using CMake or
  the autotools.  The CMake template header doesn't include entries for
  all of the protocols that you can disable, which (I think) means that
  you can't actually disable those protocols when building via CMake.
  
  Closes #523

- [Douglas Creager brought this change]

  BoringSSL: Work with stricter BIO_get_mem_data()
  
  BoringSSL implements `BIO_get_mem_data` as a function, instead of a
  macro, and expects the output pointer to be a `char **`.  We have to add
  an explicit cast to grab the pointer as a `const char **`.
  
  Closes #524

- http2: rectify the http2 version #if check
  
  We need 1.0.0 or later. Also verified by configure.

Steve Holme (9 Nov 2015)
- oauth2: Don't use XAUTH2 in OAuth 2.0 function name

- oauth2: Don't use XOAUTH2 in OAuth 2.0 variables

- oauth2: Use OAuth 2.0 rather than XOAUTH2 in comments
  
  When referring to OAuth 2.0 we should use the official name rather the
  SASL mechanism name.

Daniel Stenberg (9 Nov 2015)
- imap: avoid freeing constant string
  
  The fix in 1a614c6c3 was wrong and would leed to free() of a fixed
  string.
  
  Pointed-out-by: Kamil Dudka

- ROADMAP: remove two items already done

- RELEASE-NOTES: synced with 2200bf62054

Jay Satiro (9 Nov 2015)
- acinclude: Remove check for 16-bit curl_off_t
  
  Because it's illogical to check for a 16-bit curl_off_t.
  
  Ref: https://github.com/bagder/curl/issues/425#issuecomment-154964205

Dan Fandrich (8 Nov 2015)
- tool: Fixed a memory leak on OOM introduced in 19cb0c4a

Steve Holme (8 Nov 2015)
- [Justin Ehlert brought this change]

  imap: Don't check for continuation when executing a CUSTOMREQUEST
  
  Bug: https://github.com/bagder/curl/issues/486
  Closes https://github.com/bagder/curl/pull/487

Daniel Stenberg (7 Nov 2015)
- imap: checksrc: remove space after while before paren

- checksrc.whitelist: "missing space after close paren"
  
  ... when it was within a string!

Steve Holme (7 Nov 2015)
- opts: Corrected TLS protocols list to include POP3S rather than POP3

- imap: Quote other 'atom-specials' and not just the space character
  
  Closes #517

- imap: Fixed double quote in LIST command when mailbox contains spaces

Daniel Stenberg (6 Nov 2015)
- imap: fix compiler warning
  
  imap.c:657:13: error: assignment discards 'const' qualifier from pointer
  target type [-Werror=discarded-qualifiers]

Steve Holme (6 Nov 2015)
- imap: Don't call imap_atom() when no mailbox specified in LIST command

Daniel Stenberg (6 Nov 2015)
- curl.1: remove the overlap --range example
  
  ... it is just weird to include by default even if it still works.

- tftp tests: verify sent options too
  
  The tftpd test server now logs all received options and thus all TFTP
  test cases need to match them exactly.
  
  Extended test 283 to use and verify --tftp-blksize.

Jay Satiro (6 Nov 2015)
- getinfo: CURLINFO_ACTIVESOCKET: fix bad socket value
  
  - Set user info param to the socket returned by Curl_getconnectinfo,
  regardless of if the socket is bad. Effectively this means the user info
  param now will receive CURL_SOCKET_BAD instead of -1 on bad socket.
  
  - Remove incorrect comments.
  
  CURLINFO_ACTIVESOCKET is documented to write CURL_SOCKET_BAD to user
  info param but prior to this change it wrote -1.
  
  Bug: https://github.com/bagder/curl/pull/518
  Reported-by: Marcel Raad

Patrick Monnerat (5 Nov 2015)
- curl_ntlm_core: fix 2 curl_off_t constant overflows.

- os400: adjust specific code to support new options.

Daniel Stenberg (2 Nov 2015)
- [Lauri Kasanen brought this change]

  rawstr: Speed up Curl_raw_toupper by 40%
  
  Rationale: when starting up a curl-using app, all cookies from the jar
  are checked against each other. This was causing a startup delay in the
  Fifth browser.
  
  All tests pass.
  
  Signed-off-by: Lauri Kasanen <cand@gmx.com>

- http redirects: %-encode bytes outside of ascii range
  
  Apparently there are sites out there that do redirects to URLs they
  provide in plain UTF-8 or similar. Browsers and wget %-encode such
  headers when doing a subsequent request. Now libcurl does too.
  
  Added test 1138 to verify.
  
  Closes #473

- RELEASE-NOTES: synced with cba5bc585410

- symbols-in-version: add all CURL_HTTPPOST_* symbols

- formadd: support >2GB files on windows
  
  Closes #425

- curl.h: s/HTTPPOST_/CURL_HTTPOST_
  
  Fixes a name space pollution at the cost of programs using one of these
  defines will no longer compile. However, the vast majority of libcurl
  programs that do multipart formposts use curl_formadd() to build this
  list.
  
  Closes #506

- mbedtls: fix "Structurally dead code"
  
  CID 1332129

- mbedtls: fix "Logically dead code"
  
  CID 1332128

- Revert "openssl: engine: remove double-free"
  
  This reverts commit 370ee919b37cc9a46c36428b2bb1527eae5db2bd.
  
  Issue #509 has all the details but it was confirmed that the crash was
  not due to this, so the previous commit was wrong.

- curl.1: -E: s/private certificate/client certificate
  
  ... as the certificate is strictly speaking not private.
  
  Reported-by: John Levon

- openssl: engine: remove double-free
  
  After a successful call to SSL_CTX_use_PrivateKey(), we must not call
  EVP_PKEY_free() on the key.
  
  Reported-by: nased0
  Closes #509

Jay Satiro (27 Oct 2015)
- socks: Fix incorrect port numbers in failed connect messages

Daniel Stenberg (26 Oct 2015)
- DISTRO-DILEMMA: removed
  
  Out of date and not kept accurate. It was sort of a problem of the past
  anyway.

- [xiangbin li brought this change]

  MacOSX-Framework: sdk regex fix for sdk 10.10 and later
  
  closes #507

Jay Satiro (24 Oct 2015)
- build: Fix support for PKG_CONFIG
  
  - Allow the user to use PKG_CONFIG but not PKGCONFIG.
  
  Background:
  
  Last week in 14d5a86 a change was made to allow the user to set the
  PKGCONFIG variable. Today in 72d99f2 I supplemented that to allow the
  more common PKG_CONFIG as an alternative if PKGCONFIG is not set.
  
  Neither of those changes worked as expected because PKGCONFIG is
  occasionally reset in configure and by the CURL_CHECK_PKGCONFIG macro.
  Instead in this commit I take the approach that the user may set
  PKG_CONFIG only.

- build: Fix mingw ssl gdi32 order
  
  - If mingw ssl make sure -lgdi32 comes after ssl libs
  
  - Allow PKG_CONFIG to set pkg-config location and options
  
  Bug: https://github.com/bagder/curl/pull/501
  Reported-by: Kang Lin

Daniel Stenberg (23 Oct 2015)
- RELEASE-NOTES: synced with 03b6e078163f

- polarssl/mbedtls: fix name space pollution
  
  Global private symbols MUST start with Curl_!

- [Dmitry S. Baikov brought this change]

  mbedTLS: THREADING_SUPPORT compilation fix
  
  Closes #505

- test1137: verify --ignore-content-length for FTP

- curl.1: --ignore-content-length now works for FTP too

- [Kurt Fankhauser brought this change]

  ftp: allow CURLOPT_IGNORE_CONTENT_LENGTH to ignore size
  
  This allows FTP transfers with growing (or shrinking) files without
  causing a transfer error.
  
  Closes #480

- CURLOPT_STREAM_WEIGHT.3: call argument 'weight' too
  
  ... and add a little example of what the weight actually means. "Relative
  proportion of bandwidth".

- http2: add stream options to dist and curl_easy_setopt.3

- http2: s/priority/weight

- http2: on_frame_recv: trust the conn/data input
  
  Removed wrong assert()s
  
  The 'conn' passed in as userdata can be used and there can be other
  sessionhandles ('data') than the single one this checked for.

- http2: added three stream prio/deps options
  
  CURLOPT_STREAM_DEPENDS
  
  CURLOPT_STREAM_DEPENDS_E
  
  CURLOPT_STREAM_PRIORITY

- RELEASE-NOTES: synced with ace68fdc0cfed83d

- [m-gardet brought this change]

  mbedtls:new profile with RSA min key len = 1024.
  
  Closes #502

- checksrc: add crude // detection

Jay Satiro (21 Oct 2015)
- [Gisle Vanem brought this change]

  build: fix for MSDOS/djgpp
  
  - Add a VPATH-statement for the vtls/*.c files.
  
  - Due to 'vtls/*.c', remove that subdir part from $(OBJECTS).

Daniel Stenberg (20 Oct 2015)
- copyrights: update Gisle Vanem's email

- vtls: fix compiler warning for TLS backends without sha256
  
  ... noticed with mbedTLS.

- [Jonas Minnberg brought this change]

  vtls: added support for mbedTLS
  
  closes #496

Jay Satiro (19 Oct 2015)
- [Javier G. Sogo brought this change]

  cmake: Fix for add_subdirectory(curl) use-case
  
  - Use CURL_BINARY_DIR instead of CMAKE_BINARY_DIR.
  
  When including CURL using add_subdirectory the variables
  CMAKE_BINARY_DIR and CURL_BINARY_DIR hold different paths.
  
  Closes https://github.com/bagder/curl/pull/488
  Closes https://github.com/bagder/curl/pull/498

Daniel Stenberg (18 Oct 2015)
- RELEASE-NOTES: synced with 4c773bcb474e

- tests/FILEFORMAT: mention PSL as a valid feture to check for
  
  For example in test 1136

- teste1136: only run when PSL is enabled

- curl: slist_wc: remove curl_memory.h inclusion
  
  ... that's for the library only.

- configure: add PSL to the list of features
  
  ... to make test 1014 work again after e77b5b7453.

- [Daniel Hwang brought this change]

  tool: Generate easysrc with last cache linked-list
  
  Using a last cache linked-list improves the performance of easysrc
  generation.
  
  Bug: https://github.com/bagder/curl/issues/444
  Ref: https://github.com/bagder/curl/issues/429
  
  Closes #452

- [Tim Rühsen brought this change]

  cookies: Add support for Mozilla's Publix Suffix List
  
  Use libpsl to check the domain value of Set-Cookie headers (and cookie
  jar entries) for not being a Publix Suffix.
  
  The configure script checks for "libpsl" by default. Disable the check
  with --without-libpsl.
  
  Ref: https://publicsuffix.org/
  Ref: https://github.com/publicsuffix/list
  Ref: https://github.com/rockdaboot/libpsl

- [Richard Hosking brought this change]

  curlbuild.h: Fix non-configure compiling to mips and sh4 targets

- [Anders Bakken brought this change]

  http2: Don't pass unitialized name+len pairs to nghttp2_submit_request
  
  bug introduced by 18691642931e5c7ac8af83ac3a84fbcb36000f96.
  
  Closes #493

Dan Fandrich (16 Oct 2015)
- test1601: fix compilation with --enable-debug and --disable-crypto-auth

Daniel Stenberg (16 Oct 2015)
- multi: fix off-by-one finit[] array size
  
  introduced in c6aedf680f6. It needs to be CURLM_STATE_LAST big since it
  must hande the range 0 .. CURLM_STATE_MSGSENT (18) and CURLM_STATE_LAST
  is 19 right now.
  
  Reported-by: Dan Fandrich
  Bug: http://curl.haxx.se/mail/lib-2015-10/0069.html

- fread_func: move callback pointer from set to state struct
  
  ... and assign it from the set.fread_func_set pointer in the
  Curl_init_CONNECT function. This A) avoids that we have code that
  assigns fields in the 'set' struct (which we always knew was bad) and
  more importantly B) it makes it impossibly to accidentally leave the
  wrong value for when the handle is re-used etc.
  
  Introducing a state-init functionality in multi.c, so that we can set a
  specific function to get called when we enter a state. The
  Curl_init_CONNECT is thus called when switching to the CONNECT state.
  
  Bug: https://github.com/bagder/curl/issues/346
  
  Closes #346

Dan Fandrich (14 Oct 2015)
- test1531: case the size to fix the test on non-largefile builds

Daniel Stenberg (13 Oct 2015)
- acinclude: remove PKGCONFIG override
  
  ... and allow it to get set by a caller easier.
  
  Reported-by: Rainer Jung
  Bug: http://curl.haxx.se/mail/lib-2015-10/0035.html

Dan Fandrich (12 Oct 2015)
- docs/INSTALL: Updated example minimal binary sizes

Daniel Stenberg (11 Oct 2015)
- [Erik Johansson brought this change]

  openssl: Fix set up of pkcs12 certificate verification chain
  
  sk_X509_pop will decrease the size of the stack which means that the loop would
  end after having added only half of the certificates.
  
  Also make sure that the X509 certificate is freed in case
  SSL_CTX_add_extra_chain_cert fails.

- ntlm: error out without 64bit support as the code needs it
  
  It makes it a clearer message for developers reaching that point without
  the necessary support.
  
  Thanks-by: Jay Satiro
  
  Closes #78

- curl_global_init: set the memory function pointers correct
  
  follow-up from 6f8ecea0

- curl_global_init_mem: set function pointers before doing init
  
  ... as in the polarssl TLS backend for example it uses memory functions.

Jay Satiro (9 Oct 2015)
- http2: Fix http2_recv to return -1 if recv returned -1
  
  If the underlying recv called by http2_recv returns -1 then that is the
  value http2_recv returns to the caller.

Daniel Stenberg (8 Oct 2015)
- [Svyatoslav Mishyn brought this change]

  curl_easy_recv.3: CURLINFO_LASTSOCKET => CURLINFO_ACTIVESOCKET
  
  Closes #479

- [Svyatoslav Mishyn brought this change]

  curl_easy_send.3: CURLINFO_LASTSOCKET => CURLINFO_ACTIVESOCKET

- [Svyatoslav Mishyn brought this change]

  CURLOPT_CONNECT_ONLY.3: CURLINFO_LASTSOCKET => CURLINFO_ACTIVESOCKET

- CURLOPT_CERTINFO.3: fix reference to CURLINFO_CERTINFO

- ntlm: get rid of unconditional use of long long
  
  ... since some compilers don't have it and instead use other types, such
  as __int64.
  
  Reported by: gkinseyhpw
  Closes #478

Jay Satiro (8 Oct 2015)
- [Anders Bakken brought this change]

  des: Fix header conditional for Curl_des_set_odd_parity
  
  Follow up to 613e502.

Daniel Stenberg (7 Oct 2015)
- configure: build silently by default
  
  'make V=1' will make the build verbose like before

- bump: start climbing toward 7.46.0

- RELEASE-PROCEDURE: add the github HTTPS download step

Version 7.45.0 (7 Oct 2015)

Daniel Stenberg (7 Oct 2015)
- THANKS: 19 new contributors from the 7.45.0 announcement

- RELEASE-NOTES: synced with 69ea57970080

Jay Satiro (4 Oct 2015)
- getinfo: Fix return code for unknown CURLINFO options
  
  - If a CURLINFO option is unknown return CURLE_UNKNOWN_OPTION.
  
  Prior to this change CURLE_BAD_FUNCTION_ARGUMENT was returned on
  unknown. That return value is contradicted by the CURLINFO option
  documentation which specifies a return of CURLE_UNKNOWN_OPTION on
  unknown.

- [rouzier brought this change]

  hiperfifo: fix the pointer passed to WRITEDATA
  
  Closes https://github.com/bagder/curl/pull/471

- [Maksim Stsepanenka brought this change]

  tool_setopt: fix c_escape truncated octal
  
  Closes https://github.com/bagder/curl/pull/469

Daniel Stenberg (1 Oct 2015)
- [Orange Tsai brought this change]

  gopher: don't send NUL byte
  
  Closes #466

Jay Satiro (29 Sep 2015)
- runtests: Fix pid check in checkdied
  
  Because the 'not' operator has a very low precedence and as a result the
  entire statement was erroneously negated and could never be true.

Daniel Stenberg (30 Sep 2015)
- [Thorsten Schöning brought this change]

  win32: make recent Borland compilers use long long

- RELEASE-NOTES: synced with 69b89050d4

Jay Satiro (28 Sep 2015)
- [Michael Kalinin brought this change]

  openssl: Fix algorithm init
  
  - Change algorithm init to happen after OpenSSL config load.
  
  Additional algorithms may be available due to the user's config so we
  initialize the algorithms after the user's config is loaded.
  
  Bug: https://github.com/bagder/curl/issues/447
  Reported-by: Denis Feklushkin

- [Svyatoslav Mishyn brought this change]

  docs: fix unescaped '\n' in man pages
  
  Closes https://github.com/bagder/curl/pull/459

Daniel Stenberg (27 Sep 2015)
- http2: set TCP_NODELAY unconditionally
  
  For a single-stream download from localhost, we managed to increase
  transfer speed from 1.6MB/sec to around 400MB/sec, mostly because of
  this single fix.

- http2: avoid superfluous Curl_expire() calls
  
  ... only call it when there is data arriving for another handle than the
  one that is currently driving it.
  
  Improves single-stream download performance quite a lot.
  
  Thanks-to: Tatsuhiro Tsujikawa
  Bug: http://curl.haxx.se/mail/lib-2015-09/0097.html

- readwrite_data: set a max number of loops
  
  ... as otherwise a really fast pipe can "lock" one transfer for some
  protocols, like with HTTP/2.

- [Sergei Nikulov brought this change]

  CI: Added AppVeyor-CI for curl
  
  Closes #439

- FTP: fix uploading ASCII with unknown size
  
  ... don't try to increase the supposed file size on newlines if we don't
  know what file size it is!
  
  Patch-by: lzsiga

- [Tatsuhiro Tsujikawa brought this change]

  build: fix failures with -Wcast-align and -Werror
  
  Closes #457

- [Tatsuhiro Tsujikawa brought this change]

  curl-confopts.m4: Add missing ')'
  
  ... for CURL_CHECK_OPTION_RT
  
  Closes #456

Jay Satiro (25 Sep 2015)
- curl_easy_getinfo.3: Add brief description for each CURLINFO

Daniel Stenberg (23 Sep 2015)
- [Jakub Zakrzewski brought this change]

  CMake: Ensure discovered include dirs are considered
  
  ...during header checks. Otherwise some following header tests
  (incorrectly) fail.
  
  Closes #436

- [Jakub Zakrzewski brought this change]

  CMake: Put "winsock2.h" before "windows.h" during configure checks
  
  "windows.h" includes "winsock.h" what causes many redefinition errors
  if "winsock2.h" is included afterwards and can cause build to fail.

- tests: disable 1510 due to CI-problems on github

- [Mike Crowe brought this change]

  gnutls: Report actual GnuTLS error message for certificate errors
  
  If GnuTLS fails to read the certificate then include whatever reason it
  provides in the failure message reported to the client.
  
  Signed-off-by: Mike Crowe <mac@mcrowe.com>

- RELEASE-NOTES: synced with 6b56901b56e

- [Mike Crowe brought this change]

  gnutls: Support CURLOPT_KEYPASSWD
  
  The gnutls vtls back-end was previously ignoring any password set via
  CURLOPT_KEYPASSWD. Presumably this was because
  gnutls_certificate_set_x509_key_file did not support encrypted keys.
  
  gnutls now has a gnutls_certificate_set_x509_key_file2 function that
  does support encrypted keys. Let's determine at compile time whether the
  available gnutls supports this new function. If it does then use it to
  pass the password. If it does not then emit a helpful diagnostic if a
  password is set. This is preferable to the previous behaviour of just
  failing to read the certificate without giving a reason in that case.
  
  Signed-off-by: Mike Crowe <mac@mcrowe.com>

- CURLINFO_TLS_SESSION: always return backend info
  
  ... even for those that don't support providing anything in the
  'internals' struct member since it offers a convenient way for
  applications to figure this out.

- [Daniel Hwang brought this change]

  tool: remove redundant libcurl check
  
  The easysrc generation is run only when --libcurl is initialized.
  
  Ref: https://github.com/bagder/curl/issues/429
  
  Closes #448

- [Richard van den Berg brought this change]

  CURLOPT_PROXY.3: A proxy given as env variable gets no special treatment
  
  Closes #449

- TODO: 5.7 More compressions
  
  Like for example brotli, as being implemented in Firefox now.

Jay Satiro (21 Sep 2015)
- tool_operate: Don't call easysrc cleanup unless --libcurl
  
  - Review of 4d95491.
  
  The author changed it so easysrc only initializes when --libcurl but did
  not do the same for the call to easysrc cleanup.
  
  Ref: https://github.com/bagder/curl/issues/429

Daniel Stenberg (20 Sep 2015)
- [Viktor Szakats brought this change]

  CURLOPT_PINNEDPUBLICKEY.3: replace test.com with example.com
  
  closes #443

- KNOWN_BUGS: 91 "curl_easy_perform hangs with imap and PolarSSL"
  
  Closes #334

- KNOWN_BUGS: add link to #85

- tests: disable 1801 until fixed
  
  It is unreliable and causes CI problems on github
  
  Closes #380

- RELEASE-NOTES: synced with 4d95491636ee

- [Daniel Lee Hwang brought this change]

  tool: generate easysrc only on --libcurl
  
  Code should only be generated when --libcurl is used.
  
  Bug: https://github.com/bagder/curl/issues/429
  Reported-by: @greafhe, Jay Satiro
  
  Closes #429
  Closes #442

Jay Satiro (19 Sep 2015)
- vtls: Change designator name for server's pubkey hash
  
  - Change the designator name we use to show the base64 encoded sha256
  hash of the server's public key from 'pinnedpubkey' to
  'public key hash'.
  
  Though the server's public key hash is only shown when comparing pinned
  public key hashes, the server's hash may not match one of the pinned.

Daniel Stenberg (19 Sep 2015)
- [Isaac Boukris brought this change]

  NTLM: Reset auth-done when using a fresh connection
  
  With NTLM a new connection will always require authentication.
  Fixes #435

- [Daniel Hwang brought this change]

  ssl: add server cert's "sha256//" hash to verbose
  
  Add a "pinnedpubkey" section to the "Server Certificate" verbose
  
  Bug: https://github.com/bagder/curl/issues/410
  Reported-by: W. Mark Kubacki
  
  Closes #430
  Closes #410

- [Jakub Zakrzewski brought this change]

  openldap: only part of LDAP query results received
  
  Introduced with commit 65d141e6da5c6003a1592bbc87ee550b0ad75c2f
  
  Closes #440

- [Alessandro Ghedini brought this change]

  openssl: don't output certinfo data

- [Alessandro Ghedini brought this change]

  openssl: refactor certificate parsing to use OpenSSL memory BIO
  
  Fixes #427

Kamil Dudka (18 Sep 2015)
- nss: prevent NSS from incorrectly re-using a session
  
  Without this workaround, NSS re-uses a session cache entry despite the
  server name does not match.  This causes SNI host name to differ from
  the actual host name.  Consequently, certain servers (e.g. github.com)
  respond by 400 to such requests.
  
  Bug: https://bugzilla.mozilla.org/1202264

- nss: check return values of NSS functions

Daniel Stenberg (17 Sep 2015)
- CURLOPT_PINNEDPUBLICKEY.3: mention error code

- openssl: build with < 0.9.8
  
  ... without sha256 support and no define saying so.
  
  Reported-by: Rajkumar Mandal

- libcurl-errors.3: add two missing error codes
  
  CURLE_SSL_PINNEDPUBKEYNOTMATCH and CURLE_SSL_INVALIDCERTSTATUS

Jay Satiro (14 Sep 2015)
- CURLOPT_PINNEDPUBLICKEY.3: Improve pubkey extraction example
  
  - Show how a certificate can be obtained using OpenSSL.
  
  Bug: https://github.com/bagder/curl/pull/430
  Reported-by: Daniel Hwang

Daniel Stenberg (13 Sep 2015)
- http2: removed unused function

- CURLINFO_ACTIVESOCKET.3: mention it replaces *LASTSOCKET

- opts: add CURLINFO_* man pages to dist

- opts: 19 more CURLINFO_* options made into stand-alone man pages

- RELEASE-NOTES: synced with fad9604613

- curl: customrequest_helper: deal with NULL custom method

- [Svyatoslav Mishyn brought this change]

  CURLOPT_FNMATCH_FUNCTION.3: fix typo
  
  s => is
  
  Closes #428

- curl: point out unnecessary uses of -X in verbose mode
  
  It uses 'Note:' as a prefix as opposed to the common 'Warning:' to take
  down the tone a bit.
  
  It adds a warning for using -XHEAD on other methods becasue that may
  lead to a hanging connection.

Jay Satiro (10 Sep 2015)
- curl_sspi: fix possibly undefined CRYPT_E_REVOKED
  
  Bug: https://github.com/bagder/curl/pull/411
  Reported-by: Viktor Szakats

- buildconf.bat: fix syntax error

- [Benjamin Kircher brought this change]

  winbuild: run buildconf.bat if necessary

- [Svyatoslav Mishyn brought this change]

  docs: fix argument type for CURLINFO_SPEED_*, CURLINFO_SIZE_*
  
  long => double

Daniel Stenberg (8 Sep 2015)
- [Sergei Nikulov brought this change]

  cmake: IPv6 : disable Unix header check on Windows platform
  
  Closes #409

- parse_proxy: reject illegal port numbers
  
  If the port number in the proxy string ended weirdly or the number is
  too large, skip it. Mostly as a means to bail out early if a "bare" IPv6
  numerical address is used without enclosing brackets.
  
  Also mention the bracket requirement for IPv6 numerical addresses to the
  man page for CURLOPT_PROXY.
  
  Closes #415
  
  Reported-by: Marcel Raad

- FTP: do_more: add check for wait_data_conn in upload case
  
  In some timing-dependnt cases when a 4xx response immediately followed
  after a 150 when a STOR was issued, this function would wrongly return
  'complete == true' while 'wait_data_conn' was still set.
  
  Closes #405
  
  Reported-by: Patricia Muscalu

- [Svyatoslav Mishyn brought this change]

  CURLOPT_TLSAUTH_TYPE.3: update description
  
  Closes #414
  Closes #413

- [Svyatoslav Mishyn brought this change]

  CURLOPT_PATH_AS_IS.3: fix typo
  
  leavit => leaveit
  
  closes #412

- [Svyatoslav Mishyn brought this change]

  CURLINFO_SSL_VERIFYRESULT.3: add short description

- [Svyatoslav Mishyn brought this change]

  CURLINFO_SSL_ENGINES.3: add short description

- [Svyatoslav Mishyn brought this change]

  CURLINFO_CONTENT_LENGTH_UPLOAD.3: replace "receive" with "get" for consistency

- [Svyatoslav Mishyn brought this change]

  CURLINFO_REDIRECT_TIME.3: remove redundant '!'

Kamil Dudka (4 Sep 2015)
- Revert "has: generate the curl/has.h header"
  
  This reverts commit a60bde79f9adeb135d5c642a07f0d783fbfbbc25 I have
  pushed by mistake.  Apologies for my incompetent use of the git repo!

- nss: do not directly access SSL_ImplementedCiphers[]
  
  It causes dynamic linking issues at run-time after an update of NSS.
  
  Bug: https://lists.fedoraproject.org/pipermail/devel/2015-September/214117.html

- [Daniel Stenberg brought this change]

  has: generate the curl/has.h header
  
  changed macro name, moved and renamed script to become docs/libcurl/has.pl,
  generate code that is checksrc compliant

Daniel Stenberg (3 Sep 2015)
- gitignore: ignore more generated VC Makefiles

- projects/Windows/.gitignore: ignore generated files for release

- http2: don't pass on Connection: headers
  
  RFC 7540 section 8.1.2.2 states: "An endpoint MUST NOT generate an
  HTTP/2 message containing connection-specific header fields; any message
  containing connection-specific header fields MUST be treated as
  malformed"
  
  Closes #401

- curl.1: update RFC references

- CURLOPT_POSTREDIR.3: update RFC number and section

- CURLOPT_FOLLOWLOCATION.3: mention methods for redirects
  
  and some general cleaning up

- [Marcel Raad brought this change]

  inet_pton.c: Fix MSVC run-time check failure (2)
  
  This fixes another run-time check failure because of a narrowing cast on
  Visual C++.
  
  Closes #408

Jay Satiro (3 Sep 2015)
- docs: Warn about any-domain cookies and multiple transfers
  
  - Warn that cookies without a domain are sent to any domain:
  CURLOPT_COOKIELIST, CURLOPT_COOKIEFILE, --cookie
  
  - Note that imported Set-Cookie cookies without a domain are no longer
  exported:
  CURLINFO_COOKIELIST, CURLOPT_COOKIEJAR, --cookie-jar

Steve Holme (2 Sep 2015)
- tool_sdecls.h: Fixed compilation warning from commit 4a889441d3
  
  tool_sdecls.h:139 warning: comma at end of enumerator list

Daniel Stenberg (2 Sep 2015)
- opts: 8 more CURLINFO* options as stand-alone man pages

- RELEASE-NOTES: synced with c764cb4add1a8

- man-pages: more SEE ALSO links

- opts: more CURLINFO_* options as stand-alone man pages

Steve Holme (31 Aug 2015)
- sasl: Only define Curl_sasl_digest_get_pair() when CRYPTO_AUTH enabled
  
  Introduced in commit 59f3f92ba6 this function is only implemented when
  CURL_DISABLE_CRYPTO_AUTH is not defined. As such we shouldn't define
  the function in the header file either.

- sasl: Updated SPN variables and comments for consistency
  
  In places the "host name" and "realm" variable was referred to as
  "instance" whilst in others it was referred to as "host".

Daniel Stenberg (30 Aug 2015)
- configure: check for HMAC_Update in openssl
  
  Turns out HMAC_Init is now deprecated in openssl master (and I spelled
  HMAC_Init_ex wrong in previous commit)

Steve Holme (30 Aug 2015)
- win32: Use DES_set_odd_parity() from OpenSSL/BoringSSL by default
  
  Set HAVE_DES_SET_ODD_PARITY when using OpenSSL/BoringSSL as native
  Windows builds don't use the autoconf tools.

- des: Fixed compilation warning from commit 613e5022fe
  
  curl_ntlm_core.c:150: warning 'Curl_des_set_odd_parity' undefined;
                        assuming extern returning int

- buildconf.bat: Fixed double blank line in 'curl manual' warning output

- makefiles: Added our standard copyright header
  
  But kept the original author, when they were specified in a comment, as
  the initial copyright holder.

Jay Satiro (29 Aug 2015)
- CURLOPT_FILETIME.3: CURLINFO_FILETIME has its own manpage now

Daniel Stenberg (29 Aug 2015)
- CURLINFO_RESPONSE_CODE.3: added short description

- opts: 7 initial CURLINFO_* options as stand-alone man pages

- [Nikolai Kondrashov brought this change]

  libcurl.m4: Put braces around empty if body
  
  Put braces around empty "if" body in libcurl.m4 check to avoid warning:
  
          suggest braces around empty body in an 'if' statement
  
  and make it work with -Werror builds.
  
  Closes #402

- [Svyatoslav Mishyn brought this change]

  curl_easy_escape.3: escape '\n'
  
  Closes #398

- [Svyatoslav Mishyn brought this change]

  curl_easy_{escape,setopt}.3: fix example
  
  remove redundant '}'

- [Sergei Nikulov brought this change]

  cmake: added Windows SSL support
  
  Closes #399

- curl: point out the conflicting HTTP methods if used
  
  It isn't always clear to the user which options that cause the HTTP
  methods to conflict so by spelling them out it should hopefully be
  easier to understand why curl complains.

- curl: clarify that users can only specify one _METHOD_

- [Svyatoslav Mishyn brought this change]

  curl_easy_{escape,unescape}.3: "char *" vs. "const char *"
  
  Closes #395

Patrick Monnerat (24 Aug 2015)
- os400: include new options in wrappers and update ILE/RPG binding.

Daniel Stenberg (24 Aug 2015)
- KNOWN_BUGS: #2, not reading a HEAD response-body is not a bug
  
  ... since HTTP is forbidden to return any such.

- KNOWN_BUGS: #78 zero-length files is already fixed!

- [Razvan Cojocaru brought this change]

  getinfo: added CURLINFO_ACTIVESOCKET
  
  This patch addresses known bug #76, where on 64-bit Windows SOCKET is 64
  bits wide, but long is only 32, making CURLINFO_LASTSOCKET unreliable.
  
  Signed-off-by: Razvan Cojocaru <rcojocaru@bitdefender.com>

- http2: remove dead code
  
  Leftovers from when we removed the private socket hash.
  
  Coverity CID 1317365, "Logically dead code"

- ntlm: mark deliberate switch case fall-through
  
  Coverity CID 1317367, "Missing break in switch"

- http2: on_frame_recv: get a proper 'conn' for the debug logging
  
  "Explicit null dereferenced (FORWARD_NULL)"
  
  Coverity CID 1317366

- RELEASE-NOTES: synced with 2acaf3c804

Dan Fandrich (23 Aug 2015)
- tool: fix memory leak with --proto-default option

Jay Satiro (22 Aug 2015)
- [Nathaniel Waisbrot brought this change]

  CURLOPT_DEFAULT_PROTOCOL: added
  
  - Add new option CURLOPT_DEFAULT_PROTOCOL to allow specifying a default
  protocol for schemeless URLs.
  
  - Add new tool option --proto-default to expose
  CURLOPT_DEFAULT_PROTOCOL.
  
  In the case of schemeless URLs libcurl will behave in this way:
  
  When the option is used libcurl will use the supplied default.
  
  When the option is not used, libcurl will follow its usual plan of
  guessing from the hostname and falling back to 'http'.

- runtests: Allow for spaces in server-verify curl custom path

Daniel Stenberg (22 Aug 2015)
- NTLM: recent boringssl brought DES_set_odd_parity back
  
  ... so improve the #ifdefs for using our local implementation.

- configure: detect latest boringssl
  
  Since boringssl brought back DES_set_odd_parity again, it cannot be used
  to differentiate from boringssl. Using the OPENSSL_IS_BORINGSSL define
  seems better anyway.
  
  URL: https://android.googlesource.com/platform/external/curl/+/f551028d5caab29d4b4a4ae8c159c76c3cfd4887%5E!/
  Original-patch-by: Bertrand Simonnet
  
  Closes #393

- configure: change functions to detect openssl (clones)
  
  ... since boringssl moved the former ones and the check started to fail.
  
  URL: https://android.googlesource.com/platform/external/curl/+/f551028d5caab29d4b4a4ae8c159c76c3cfd4887%5E!/
  Original-patch-by: Bertrand Simonnet

- [Alessandro Ghedini brought this change]

  openssl: handle lack of server cert when strict checking disabled
  
  If strict certificate checking is disabled (CURLOPT_SSL_VERIFYPEER
  and CURLOPT_SSL_VERIFYHOST are disabled) do not fail if the server
  doesn't present a certificate at all.
  
  Closes #392

- ftp: clear the do_more bit when the server has connected
  
  The multi state machine would otherwise go into the DO_MORE state after
  DO, even for the case when the FTP state machine had already performed
  those duties, which caused libcurl to get stuck in that state and fail
  miserably. This occured for for active ftp uploads.
  
  Reported-by: Patricia Muscalu

- [Jactry Zeng brought this change]

  travis.yml: Add OS X testbot.

- [Rémy Léone brought this change]

  travis: Upgrading to container based build
  
  http://docs.travis-ci.com/user/migrating-from-legacy
  
  Closes #388

- RELEASE-NOTES: synced with 14ff86256b13e

- [Erik Janssen brought this change]

  rtsp: stop reading empty DESCRIBE responses
  
  Based-on-patch-by: Jim Hollinger

- [Erik Janssen brought this change]

  rtsp: support basic/digest authentication

- [Sam Roth brought this change]

  CURLMOPT_PUSHFUNCTION.3: fix argument types
  
  Closes #389
  Closes #386

- [Marcel Raad brought this change]

  inet_pton.c: Fix MSVC run-time check failure
  
  Visual Studio complains with a message box:
  
  "Run-Time Check Failure #1 - A cast to a smaller data type has caused a
  loss of data.  If this was intentional, you should mask the source of
  the cast with the appropriate bitmask.
  
  For example:
  char c = (i & 0xFF);
  
  Changing the code in this way will not affect the quality of the
  resulting optimized code."
  
  This is because only 'val' is cast to unsigned char, so the "& 0xff" has
  no effect.
  
  Closes #387

Jay Satiro (18 Aug 2015)
- docs: Update the redirect protocols disabled by default
  
  - Clarify that FILE and SCP are disabled by default since 7.19.4
  - Add that SMB and SMBS are disabled by default since 7.40.0
  - Add CURLPROTO_SMBS to the list of protocols

- gitignore: Sort for readability
  
  find . -name .gitignore -print0 | xargs -i -0 sort -o '{}' '{}'

Daniel Stenberg (15 Aug 2015)
- curl_easy_getinfo.3: fix superfluous space
  
  ... and changed "oriented" to "related"
  
  Closes #378

- CURLOPT_HTTP_VERSION.3: connection re-use goes before version

- [Daniel Kahn Gillmor brought this change]

  curl.1: Document weaknesses in SSLv2 and SSLv3
  
  Acknowledge that SSLv3 is also widely considered to be insecure.
  
  Also, provide references for people who want to know more about why it's
  insecure.

Steve Holme (14 Aug 2015)
- generate.bat: Added support for generating only the prerequisite files

- generate.bat: Only call buildconf.bat if it exists

- generate.bat: Fixed issues when ran in directories with special chars

Daniel Stenberg (14 Aug 2015)
- [Brad King brought this change]

  cmake: Fix CurlTests check for gethostbyname_r with 5 arguments
  
  Fix the check code to pass 5 arguments instead of 6.  This typo was
  introduced by commit aebfd4cfbf (cmake: fix gethostby{addr,name}_r in
  CurlTests, 2014-10-31).

Steve Holme (14 Aug 2015)
- * buildconf.bat: Fixed issues when ran in directories with special chars
  
  Bug: https://github.com/bagder/curl/pull/379
  Reported-by: Daniel Seither

Jay Satiro (13 Aug 2015)
- curl_global_init_mem.3: Stronger thread safety warning
  
  Bug: http://curl.haxx.se/mail/lib-2015-08/0016.html
  Reported-by: Eric Ridge

Daniel Stenberg (12 Aug 2015)
- [Svyatoslav Mishyn brought this change]

  curl_multi_add_handle.3: fix a typo
  
  "can not" => "cannot"
  
  closes #377

- [Alessandro Ghedini brought this change]

  docs: fix typos
  
  closes #376

- bump: start working toward 7.45.0

- THANKS: remove duplicate name

- THANKS-filter: merge Todd's names

- THANKS: 13 new contributors from the 7.44.0 RELEASE-NOTES

Version 7.44.0 (11 Aug 2015)

Daniel Stenberg (11 Aug 2015)
- RELEASE-NOTES: synced with c75a1e775061

- [Svyatoslav Mishyn brought this change]

  curl_formget.3: correct return code
  
  Closes #375

- [Svyatoslav Mishyn brought this change]

  libcurl-tutorial.3: fix formatting
  
  Closes #374

- [Svyatoslav Mishyn brought this change]

  curl_easy_recv.3: fix formatting

- [Anders Bakken brought this change]

  http2: discard frames with no SessionHandle
  
  Return 0 instead of NGHTTP2_ERR_CALLBACK_FAILURE if we can't locate the
  SessionHandle. Apparently mod_h2 will sometimes send a frame for a
  stream_id we're finished with.
  
  Use nghttp2_session_get_stream_user_data and
  nghttp2_session_set_stream_user_data to identify SessionHandles instead
  of a hash.
  
  Closes #372

- RELEASE-NOTES: synced with 9ee40ce2aba

- [Viktor Szakats brought this change]

  build: refer to fixed libidn versions
  
  closes #371

- Revert "configure: disable libidn by default"
  
  This reverts commit e6749055d65398315fd77f5b5b8234c5552ac2d3.
  
  ... since libidn has since been fixed.

- [Jakub Zakrzewski brought this change]

  CMake: s/HAVE_GSS_API/HAVE_GSSAPI/ to match header define
  
  Otherwise the build only pretended to use GSS-API
  
  Closes #370

- SFTP: fix range request off-by-one in size check
  
  Reported-by: Tim Stack
  
  Closes #359

- test46: update cookie expire time
  
  ... since it went old and thus was expired and caused the test to fail!

Steve Holme (9 Aug 2015)
- generate.bat: Use buildconf.bat for prerequisite file generation

- buildconf.bat: Tidy up of comments after recent commits

- buildconf.bat: Added full generation of src\tool_hugehelp.c
  
  Added support for generating the full man page based on code from
  generate.bat.

- buildconf.bat: Added detection of groff, nroff, perl and gzip
  
  To allow for the full generation of tool_hugehelp.c added detection of
  the required programs - based on code from generate.bat.

- buildconf.bat: Move DOS variable clean-up code to separate function
  
  Rather than duplicate future variables, during clean-up of both success
  and error conditions, use a common function that can be called by both.

- RELEASE-NOTES: Synced with 39dcf352d2

- buildconf.bat: Added error messages on failure

- buildconf.bat: Generate and clean files in the same order

- buildconf.bat: Maintain compatibility with DOS based systems
  
  Commit f08e30d7bc broke compatibility with DOS and non Windows NT based
  versions of Windows due to the use of the setlocal command.

Jay Satiro (9 Aug 2015)
- CURLOPT_RESOLVE.3: Note removal support was added in 7.42
  
  Bug: http://curl.haxx.se/mail/lib-2015-08/0019.html
  Reported-by: Inca R

Steve Holme (8 Aug 2015)
- checksrc.bat: Fixed error when missing *.c and *.h files
  
  File Not Found

- checksrc.bat: Fixed incorrect 'lib\vtls' path check in commit 333c36b276

- checksrc.bat: Fixed error when [directory] isn't a curl source directory
  
  The system cannot find the file specified.

- checksrc.bat: Added check for unknown arguments

- scripts: Added missing comments

- scripts: Always perform setlocal and endlocal calls in pairs
  
  Ensure that there isn't a mismatch between setlocal and endlocal calls,
  which could have happened due to setlocal being called after certain
  error conditions were checked for.

- scripts: Allow -help to be specified in any argument
  
  Allow the -help command line argument to be specified in any argument
  and not just as the first.

Daniel Stenberg (6 Aug 2015)
- [juef brought this change]

  curl_multi_remove_handle.3: fix formatting
  
  closes #366

Steve Holme (6 Aug 2015)
- README: Added notes about 'Running DLL based configurations'
  
  ...as well as a TODO for a future enhancement to the project files.
  
  Thanks-to: Jay Satiro

- RELEASE-NOTES: Synced with cf8975387f

- buildconf.bat: Synchronise no repository error with generate.bat

- generate.bat: Added a check for the presence of a git repository

- [Jay Satiro brought this change]

  build: Added wolfSSL configurations to VC10+ project files
  
  URL: https://github.com/bagder/curl/pull/174

- [Jay Satiro brought this change]

  build: Added wolfSSL build script for Visual Studio projects
  
  Added the wolfSSL build script, based on build-openssl.bat, as well as
  the property sheet and header file required for the upcoming additions
  to the Visual Studio project files.

Daniel Stenberg (6 Aug 2015)
- CHANGES: refer to the online changelog
  
  Suggested-by: mc0e

- [Isaac Boukris brought this change]

  NTLM: handle auth for only a single request
  
  Currently when the server responds with 401 on NTLM authenticated
  connection (re-used) we consider it to have failed.  However this is
  legitimate and may happen when for example IIS is set configured to
  'authPersistSingleRequest' or when the request goes thru a proxy (with
  'via' header).
  
  Implemented by imploying an additional state once a connection is
  re-used to indicate that if we receive 401 we need to restart
  authentication.
  
  Closes #363

Steve Holme (5 Aug 2015)
- RELEASE-NOTES: Synced with 473807b95f

- generate.bat: Use buildconf.bat for prerequisite file clean-up

- buildconf.bat: Added support for file clean-up via -clean

- buildconf.bat: Added progress output

- buildconf.bat: Avoid using goto for file not in repository

Daniel Stenberg (5 Aug 2015)
- curl_slist_append.3: add error checking to the example

Steve Holme (5 Aug 2015)
- buildconf.bat: Added display of usage text with -help

- buildconf.bat: Added exit codes for error handling

- buildconf.bat: Added our standard copyright header

- buildconf.bat: Use lower-case for commands and reserved keywords

- generate.bat: Only clean prerequisite files when in ALL mode

- generate.bat: Moved error messages out of sub-routines

- generate.bat: More use of lower-case for commands and reserved keywords

Daniel Stenberg (3 Aug 2015)
- libcurl.3: fix a single typo
  
  Closes #361

- RELEASE-NOTES: synced with c4eb10e2f06f

- SSH: three state machine fixups
  
  The SSH state machine didn't clear the 'rc' variable appropriately in a
  two places which prevented it from looping the way it should. And it
  lacked an 'else' statement that made it possible to erroneously get
  stuck in the SSH_AUTH_AGENT state.
  
  Reported-by: Tim Stack
  
  Closes #357

- curl_gssapi: remove 'const' to fix compiler warnings
  
  initialization discards 'const' qualifier from pointer target type

- docs: formpost needs the full size at start of upload
  
  Closes #360

Steve Holme (1 Aug 2015)
- sspi: Fix typo from left over from old code which referenced NTLM
  
  References to NTLM in the identity generation should have been removed
  in commit c469941293 but not all were.

- win32: Fix compilation warnings from commit 40c921f8b8
  
  connect.c:953:5: warning: initializer element is not computable at load
                   time
  connect.c:953:5: warning: missing initializer for field 'dwMinorVersion'
                   of 'OSVERSIONINFOEX'
  curl_sspi.c:97:5: warning: initializer element is not computable at load
                    time
  curl_sspi.c:97:5: warning: missing initializer for field 'szCSDVersion'
                    of 'OSVERSIONINFOEX'

- schannel: Fix compilation warning from commit 7a8e861a56
  
  schannel.c:1125:5: warning: missing initializer for field 'dwMinorVersion'
                     of 'OSVERSIONINFOEX' [-Wmissing-field-initializers

Daniel Stenberg (31 Jul 2015)
- libcurl-thread.3: minor reformatting

Jay Satiro (31 Jul 2015)
- curl_global_init_mem.3: Warn threaded resolver needs thread safe funcs
  
  Bug: http://curl.haxx.se/mail/lib-2015-07/0149.html
  Reported-by: Eric Ridge

- libcurl-thread.3: Warn memory functions must be thread safe
  
  Bug: http://curl.haxx.se/mail/lib-2015-07/0149.html
  Reported-by: Eric Ridge

Steve Holme (31 Jul 2015)
- RELEASE-NOTES: Synced with 8b1d00ac1a

- INSTALL: Minor formatting correction in 'Legacy Windows and SSL' section
  
  ...as well as some rewording.

Kamil Dudka (30 Jul 2015)
- http: move HTTP/2 cleanup code off http_disconnect()
  
  Otherwise it would never be called for an HTTP/2 connection, which has
  its own disconnect handler.
  
  I spotted this while debugging <https://bugzilla.redhat.com/1248389>
  where the http_disconnect() handler was called on an FTP session handle
  causing 'dnf' to crash.  conn->data->req.protop of type (struct FTP *)
  was reinterpreted as type (struct HTTP *) which resulted in SIGSEGV in
  Curl_add_buffer_free() after printing the "Connection cache is full,
  closing the oldest one." message.
  
  A previously working version of libcurl started to crash after it was
  recompiled with the HTTP/2 support despite the HTTP/2 protocol was not
  actually used.  This commit makes it work again although I suspect the
  root cause (reinterpreting session handle data of incompatible protocol)
  still has to be fixed.  Otherwise the same will happen when mixing FTP
  and HTTP/2 connections and exceeding the connection cache limit.
  
  Reported-by: Tomas Tomecek
  Bug: https://bugzilla.redhat.com/1248389

Daniel Stenberg (30 Jul 2015)
- [Viktor Szakats brought this change]

  ABI doc: use secure URL

- ABI: remove the ascii logo
  
  and made the indent level to 1

- libcurl-multi.3: mention curl_multi_wait
  
  ... and some general rewordings to improve this docs.
  
  Reported-by: Tim Stack
  
  Closes #356

Steve Holme (30 Jul 2015)
- maketgz: Fixed some VC makefiles missing from the release tarball
  
  VC7, VC11, VC12 and VC14 makefiles were missing from the release
  tarball.

- RELEASE-NOTES: Synced with 2d7e165761

- build: Added VC14 project files to Makefile.am

- build: Added VC14 project files
  
  Updates to Makefile.am for the generation of the project files in
  the tarball to follow.

Jay Satiro (29 Jul 2015)
- libcurl-thread.3: Clarify CURLOPT_NOSIGNAL takes long value 1L

Steve Holme (28 Jul 2015)
- generate.bat: Use lower-case for commands and reserved keywords
  
  Whilst there are no coding standards for the batch files used in curl,
  most tend to use lower-case for keywords and upper-case for variables.

- build: Added initial VC14 support to generate.bat
  
  Visual Studio project files and updates to makefile.am to follow.

- build: Fixed missing .opensdf files from VC10+ .gitignore files

- build: Use $(ProjectName) macro for curl.exe and curld.exe filenames
  
  This wasn't possible with the old curlsrc project filenames, but like
  commit 2a615a2b64 and 11397eb6dd for libcurl use the built in Visual
  Studio macros for the output filenames.

- build: Renamed curl src Visual Studio project files
  
  Following commit 957fcd9049 and in preparation for adding the VC14
  project files renamed the curl source project files.

Daniel Stenberg (28 Jul 2015)
- [Jay Satiro brought this change]

  libcurl-thread.3: Revert to stricter handle wording
  
  .. also update formatting and add WinSSL and wolfSSL to the SSL/TLS
  handlers list.

- [Jay Satiro brought this change]

  libcurl-thread.3: Consolidate thread safety info
  
  This is a new document to consolidate our thread safety information from
  several documents (curl-www:features, libcurl.3, libcurl-tutorial.3).
  Each document's section on multi-threading will now point to this one.

Steve Holme (27 Jul 2015)
- README: Corrected formatting for 'Legacy Windows and SSL' section
  
  ...as well as some wording.

- build-openssl.bat: Added support for VC14

Daniel Stenberg (26 Jul 2015)
- RELEASE-NOTES: synced with 0f645adc95390e8

- test1902: attempt to make the test more reliable
  
  Closes #355

- comment: fix comment about adding new option support

Jay Satiro (25 Jul 2015)
- build-openssl.bat: Show syntax if required args are missing

Daniel Stenberg (26 Jul 2015)
- TODO: improve how curl works in a windows console window
  
  Closes #322 for now

- 1.11 minimize dependencies with dynamicly loaded modules
  
  Closes #349 for now

Jay Satiro (25 Jul 2015)
- tool_operate: Fix CURLOPT_SSL_OPTIONS for builds without HTTPS
  
  - Set CURLOPT_SSL_OPTIONS only if the tool enabled an SSL option.
  
  Broken by me several days ago in 172b2be.
  https://github.com/bagder/curl/commit/172b2be#diff-70b44ee478e58d4e1ddcf9c9a73d257b
  
  Bug: http://curl.haxx.se/mail/lib-2015-07/0119.html
  Reported-by: Dan Fandrich

Daniel Stenberg (25 Jul 2015)
- configure: check if OpenSSL linking wants -ldl
  
  To make it easier to link with static versions of OpenSSL, the configure
  script now checks if -ldl is needed for linking.
  
  Help-by: TJ Saunders

- [Michael Kaufmann brought this change]

  HTTP: ignore "Content-Encoding: compress"
  
  Currently, libcurl rejects responses with "Content-Encoding: compress"
  when CURLOPT_ACCEPT_ENCODING is set to "". I think that libcurl should
  treat the Content-Encoding "compress" the same as other
  Content-Encodings that it does not support, e.g. "bzip2". That means
  just ignoring it.

- [Marcel Raad brought this change]

  openssl: work around MSVC warning
  
  MSVC 12 complains:
  
  lib\vtls\openssl.c(1554): warning C4701: potentially uninitialized local
  variable 'verstr' used It's a false positive, but as it's normally not,
  I have enabled warning-as-error for that warning.

- [Michał Fita brought this change]

  configure: add --disable-rt option
  
  This option disables any attempts in configure to create dependency on
  stuff requiring linking to librt.so and libpthread.so, in this case this
  means clock_gettime(CLOCK_MONOTONIC, &mt).
  
  We were in need to build curl which doesn't link libpthread.so to avoid
  the following bug:
  https://sourceware.org/bugzilla/show_bug.cgi?id=16628.

Kamil Dudka (23 Jul 2015)
- http2: verify success of strchr() in http2_send()
  
  Detected by Coverity.
  
  Error: NULL_RETURNS:
  lib/http2.c:1301: returned_null: "strchr" returns null (checked 103 out of 109 times).
  lib/http2.c:1301: var_assigned: Assigning: "hdbuf" = null return value from "strchr".
  lib/http2.c:1302: dereference: Incrementing a pointer which might be null: "hdbuf".
  1300|
  1301|     hdbuf = strchr(hdbuf, 0x0a);
  1302|->   ++hdbuf;
  1303|
  1304|     authority_idx = 0;

Jay Satiro (22 Jul 2015)
- Windows: Fix VerifyVersionInfo calls
  
  - Fix the VerifyVersionInfo calls, which we use to test for the OS major
  version, to also test for the minor version as well as the service pack
  major and minor versions.
  
  MSDN: "If you are testing the major version, you must also test the
  minor version and the service pack major and minor versions."
  
  https://msdn.microsoft.com/en-us/library/windows/desktop/ms725492.aspx
  
  Bug: https://github.com/bagder/curl/pull/353#issuecomment-123493098
  Reported-by: Marcel Raad <MarcelRaad@users.noreply.github.com>

- [Marcel Raad brought this change]

  schannel: Replace deprecated GetVersion with VerifyVersionInfo

Steve Holme (21 Jul 2015)
- makefile: Added support for VC14

Patrick Monnerat (21 Jul 2015)
- os400: ebcdic wrappers for new functions. Upgrade ILE/RPG bindings.

- libcurl: VERSIONINFO update
  Addition of new procedures curl_pushheader_bynum and curl_pushheader_byname
  requires VERSIONINFO updating.

- http2: satisfy external references even if http2 is not compiled in.

Daniel Stenberg (20 Jul 2015)
- http2: add stream != NULL checks for reliability
  
  They should not trigger, but in case of internal problems we at least
  avoid crashes this way.

Jay Satiro (18 Jul 2015)
- symbols-in-versions: Add new CURLSSLOPT_NO_REVOKE symbol

- SSL: Add an option to disable certificate revocation checks
  
  New tool option --ssl-no-revoke.
  New value CURLSSLOPT_NO_REVOKE for CURLOPT_SSL_OPTIONS.
  
  Currently this option applies only to WinSSL where we have automatic
  certificate revocation checking by default. According to the
  ssl-compared chart there are other backends that have automatic checking
  (NSS, wolfSSL and DarwinSSL) so we could possibly accommodate them at
  some later point.
  
  Bug: https://github.com/bagder/curl/issues/264
  Reported-by: zenden2k <zenden2k@gmail.com>

- runtests: Allow for spaces in curl custom path
  
  .. also fix some typos in test's FILEFORMAT spec.

- [David Woodhouse brought this change]

  ntlm_wb: Fix theoretical memory leak
  
  Static analysis indicated that my commit 9008f3d564 ("ntlm_wb: Fix
  hard-coded limit on NTLM auth packet size") introduced a potential
  memory leak on an error path, because we forget to free the buffer
  before returning an error.
  
  Fix this.
  
  Although actually, it never happens in practice because we never *get*
  here with state == NTLMSTATE_TYPE1. The state is always zero. That
  might want cleaning up in a separate patch.
  
  Reported-by: Terri Oda

- strerror: Add CRYPT_E_REVOKED to SSPI error strings

Kamil Dudka (14 Jul 2015)
- libtest: call PR_Cleanup() on exit if NSPR is used
  
  This prevents valgrind from reporting possibly lost memory that NSPR
  uses for file descriptor cache and other globally allocated internal
  data structures.
  
  Reported-by: Štefan Kremeň

Jay Satiro (14 Jul 2015)
- [John Malmberg brought this change]

  openssl: VMS support for SHA256
  
  setup-vms.h: More symbols for SHA256, hacks for older VAX
  
  openssl.h: Use OpenSSL OPENSSL_NO_SHA256 macro to allow building on VAX.
  
  openssl.c: Use OpenSSL version checks and OPENSSL_NO_SHA256 macro to
  allow building on VAX and 64 bit VMS.

- examples: Fix typo in multi-single.c

Daniel Stenberg (7 Jul 2015)
- [Tatsuhiro Tsujikawa brought this change]

  http2: Fix memory leak in push header array

Dan Fandrich (2 Jul 2015)
- test2041: fixed line endings in protocol part

- cyassl: fixed mismatched sha256sum function prototype

Daniel Stenberg (1 Jul 2015)
- [moparisthebest brought this change]

  SSL: Pinned public key hash support

- examples: provide <DESC> sections

- [John Malmberg brought this change]

  OpenVMS: VMS Software, Inc now the supplier.
  
  setup-vms.h: Symbol case fixups submitted by Michael Steve
  
  build_gnv_curl_pcsi_desc.com: VSI aka as VMS Software, is now the
  supplier of new versions of VMS.  The install kit needs to accept
  VSI as a producer.

Jay Satiro (30 Jun 2015)
- multi: Move http2 push function declarations to header end
  
  This change necessary for binary compatibility.
  
  Prior to this change test 1135 failed due to the order of functions.

- symbols-in-versions: Add new http2 push symbols
  
  Prior to this change test 1119 failed due to the missing symbols.

Daniel Stenberg (30 Jun 2015)
- RELEASE-NOTES: synced with e6749055d653

- configure: disable libidn by default
  
  For security reasons, until there is a fix.
  
  Bug: http://curl.haxx.se/mail/lib-2015-06/0143.html
  Reported-by: Gustavo Grieco, Feist Josselin

- SSL-PROBLEMS: mention WinSSL problems in WinXP

- CODE_OF_CONDUCT.md: added
  
  Just to underscore how we treat each other in this project. Nothing new
  really, but could be useful for newcomers and outsiders to see our
  values.

- tool_header_cb: fflush the header stream
  
  Flush the header stream when -D is used so that they are sent off
  earlier.
  
  Bug: https://github.com/bagder/curl/issues/324
  Reported-by: Cédric Connes

- [Roger Leigh brought this change]

  tests: Distribute CMakeLists.txt files in subdirectories

- CURLOPT_FAILONERROR.3: mention that it closes the connection
  
  Reported-by: bemoody
  Bug: https://github.com/bagder/curl/issues/325

- curl_multi_setopt.3: alpha sort the options

- curl_multi_setopt.3: add the new push options

- [Tatsuhiro Tsujikawa brought this change]

  http2: Use nghttp2 library error code for error return value

- [Tatsuhiro Tsujikawa brought this change]

  http2: Harden header validation for curl_pushheader_byname
  
  Since we do prefix match using given header by application code
  against header name pair in format "NAME:VALUE", and VALUE part can
  contain ":", we have to careful about existence of ":" in header
  parameter.  ":" should be allowed to match HTTP/2 pseudo-header field,
  and other use of ":" in header must be treated as error, and
  curl_pushheader_byname should return NULL.  This commit implements
  this behaviour.

- [Tatsuhiro Tsujikawa brought this change]

  CURLMOPT_PUSHFUNCTION.3: Remove unused variable

- CURLMOPT_PUSHFUNCTION.3: added example

- http2: curl_pushheader_byname now takes a const char *

- http2-serverpush.c: example code

- http2: free all header memory after the push callback

- http2: init the pushed transfer properly

- http2: fixed the header accessor functions for the push callback

- http2: setup the new pushed stream properly

- http2: initial implementation of the push callback

- http2: initial HTTP/2 server push types/docs

- test1531: verify POSTFIELDSIZE set after add_handle
  
  Following the fix made in 903b6e05565bf.

- pretransfer: init state.infilesize here, not in add_handle
  
  ... to properly support that options are set to the handle after it is
  added to the multi handle.
  
  Bug: http://curl.haxx.se/mail/lib-2015-06/0122.html
  Reported-by: Stefan Bühler

Jay Satiro (21 Jun 2015)
- [Lior Kaplan brought this change]

  tool_help: fix --tlsv1 help text to use >= for TLSv1

- INSTALL: Advise use of non-native SSL for Windows <= XP
  
  Advise that WinSSL in versions <= XP will not be able to connect to
  servers that no longer support the legacy handshakes and algorithms used
  by those versions, and to use an alternate backend like OpenSSL instead.
  
  Bug: https://github.com/bagder/curl/issues/253
  Reported-by: zenden2k <zenden2k@gmail.com>

Kamil Dudka (19 Jun 2015)
- curl_easy_setopt.3: restore contents removed by mistake
  
  ... in commit curl-7_43_0-18-g570076e

Daniel Stenberg (19 Jun 2015)
- curl_easy_setopt.3: mention CURLOPT_PIPEWAIT

Jay Satiro (18 Jun 2015)
- cookie: Fix bug in export if any-domain cookie is present
  
  In 3013bb6 I had changed cookie export to ignore any-domain cookies,
  however the logic I used to do so was incorrect, and would lead to a
  busy loop in the case of exporting a cookie list that contained
  any-domain cookies. The result of that is worse though, because in that
  case the other cookies would not be written resulting in an empty file
  once the application is terminated to stop the busy loop.

Dan Fandrich (18 Jun 2015)
- FTP: fixed compiling with --disable-proxy, broken in b88f980a

Daniel Stenberg (18 Jun 2015)
- tool: always provide negotiate/kerberos options
  
  libcurl can still be built with it, even if the tool is not. Maintain
  independence!

- TODO: Support IDNA2008

- [Viktor Szakats brought this change]

  Makefile.m32: add support for CURL_LDFLAG_EXTRAS
  
  It is similar to existing CURL_CFLAG_EXTRAS, but for
  extra linker option.

- RTSP: removed another piece of dead code
  
  Coverity CID 1306668

- openssl: fix use of uninitialized buffer
  
  Make sure that the error buffer is always initialized and simplify the
  use of it to make the logic easier.
  
  Bug: https://github.com/bagder/curl/issues/318
  Reported-by: sneis

- examples: more descriptions

- examples: add descriptions with <DESC>
  
  Using this fixed format for example descriptions, we can generate a
  better list on the web site.

- libcurl-errors.3: fix typo

- curl_easy_setopt.3: option order doesn't matter

- openssl: fix build with BoringSSL
  
  OPENSSL_load_builtin_modules does not exist in BoringSSL. Regression
  from cae43a1

- [Paul Howarth brought this change]

  openssl: Fix build with openssl < ~ 0.9.8f
  
  The symbol SSL3_MT_NEWSESSION_TICKET appears to have been introduced at
  around openssl 0.9.8f, and the use of it in lib/vtls/openssl.c breaks
  builds with older openssls (certainly with 0.9.8b, which is the latest
  older version I have to try with).

- FTP: do the HTTP CONNECT for data connection blocking
  
  ** WORK-AROUND **
  
  The introduced non-blocking general behaviour for Curl_proxyCONNECT()
  didn't work for the data connection establishment unless it was very
  fast. The newly introduced function argument makes it operate in a more
  blocking manner, more like it used to work in the past. This blocking
  approach is only used when the FTP data connecting through HTTP proxy.
  
  Blocking like this is bad. A better fix would make it work more
  asynchronously.
  
  Bug: https://github.com/bagder/curl/issues/278

- bump: start the journey toward 7.44.0

Jay Satiro (17 Jun 2015)
- CURLOPT_ERRORBUFFER.3: Fix example, escape backslashes

- CURLOPT_ERRORBUFFER.3: Improve example

Version 7.43.0 (17 Jun 2015)

Daniel Stenberg (17 Jun 2015)
- RELEASE-NOTES: 7.43.0 release

- THANKS: updated with 7.43.0 names

- [Kamil Dudka brought this change]

  http: do not leak basic auth credentials on re-used connections
  
  CVE-2015-3236
  
  This partially reverts commit curl-7_39_0-237-g87c4abb
  
  Reported-by: Tomas Tomecek, Kamil Dudka
  Bug: http://curl.haxx.se/docs/adv_20150617A.html

- [Kamil Dudka brought this change]

  test2040: verify basic auth on re-used connections

- SMB: rangecheck values read off incoming packet
  
  CVE-2015-3237
  
  Detected by Coverity. CID 1299430.
  
  Bug: http://curl.haxx.se/docs/adv_20150617B.html

Jay Satiro (17 Jun 2015)
- schannel: schannel_recv overhaul
  
  This commit is several drafts squashed together. The changes from each
  draft are noted below. If any changes are similar and possibly
  contradictory the change in the latest draft takes precedence.
  
  Bug: https://github.com/bagder/curl/issues/244
  Reported-by: Chris Araman
  
  %%
  %% Draft 1
  %%
  - return 0 if len == 0. that will have to be documented.
  - continue on and process the caches regardless of raw recv
  - if decrypted data will be returned then set the error code to CURLE_OK
  and return its count
  - if decrypted data will not be returned and the connection has closed
  (eg nread == 0) then return 0 and CURLE_OK
  - if decrypted data will not be returned and the connection *hasn't*
  closed then set the error code to CURLE_AGAIN --only if an error code
  isn't already set-- and return -1
  - narrow the Win2k workaround to only Win2k
  
  %%
  %% Draft 2
  %%
  - Trying out a change in flow to handle corner cases.
  
  %%
  %% Draft 3
  %%
  - Back out the lazier decryption change made in draft2.
  
  %%
  %% Draft 4
  %%
  - Some formatting and branching changes
  - Decrypt all encrypted cached data when len == 0
  - Save connection closed state
  - Change special Win2k check to use connection closed state
  
  %%
  %% Draft 5
  %%
  - Default to CURLE_AGAIN in cleanup if an error code wasn't set and the
  connection isn't closed.
  
  %%
  %% Draft 6
  %%
  - Save the last error only if it is an unrecoverable error.
  
  Prior to this I saved the last error state in all cases; unfortunately
  the logic to cover that in all cases would lead to some muddle and I'm
  concerned that could then lead to a bug in the future so I've replaced
  it by only recording an unrecoverable error and that state will persist.
  
  - Do not recurse on renegotiation.
  
  Instead we'll continue on to process any trailing encrypted data
  received during the renegotiation only.
  
  - Move the err checks in cleanup after the check for decrypted data.
  
  In either case decrypted data is always returned but I think it's easier
  to understand when those err checks come after the decrypted data check.
  
  %%
  %% Draft 7
  %%
  - Regardless of len value go directly to cleanup if there is an
  unrecoverable error or a close_notify was already received. Prior to
  this change we only acknowledged those two states if len != 0.
  
  - Fix a bug in connection closed behavior: Set the error state in the
  cleanup, because we don't know for sure it's an error until that time.
  
  - (Related to above) In the case the connection is closed go "greedy"
  with the decryption to make sure all remaining encrypted data has been
  decrypted even if it is not needed at that time by the caller. This is
  necessary because we can only tell if the connection closed gracefully
  (close_notify) once all encrypted data has been decrypted.
  
  - Do not renegotiate when an unrecoverable error is pending.
  
  %%
  %% Draft 8
  %%
  - Don't show 'server closed the connection' info message twice.
  
  - Show an info message if server closed abruptly (missing close_notify).

Daniel Stenberg (16 Jun 2015)
- [Paul Oliver brought this change]

  Fix typo in docs
  
  s/curret/current/

- [Viktor Szakats brought this change]

  docs: update URLs

- RELEASE-NOTES: synced with f29f2cbd00dbe5f

- [Viktor Szakats brought this change]

  README: use secure protocol for Git repository

- [Viktor Szakats brought this change]

  HTTP2.md: use SSL/TLS IETF URLs

- [Viktor Szakats brought this change]

  LICENSE-MIXING: update URLs
  
  * use SSL/TLS where available
  * follow permanent redirects

- LICENSE-MIXING: refreshed

- curl_easy_duphandle: see also *reset

- rtsp_do: fix DEAD CODE
  
  "At condition p_request, the value of p_request cannot be NULL."
  
  Coverity CID 1306668.

- security:choose_mech fix DEAD CODE warning
  
  ... by removing the "do {} while (0)" block.
  
  Coverity CID 1306669

- curl.1: netrc is in man section 5

- curl.1: small format fix
  
  use \fI-style instead of .BR for references

- urldata: store POST size in state.infilesize too
  
  ... to simplify checking when PUT _or_ POST have completed.
  
  Reported-by: Frank Meier
  Bug: http://curl.haxx.se/mail/lib-2015-06/0019.html

Dan Fandrich (14 Jun 2015)
- test1530: added http to required features

Jay Satiro (14 Jun 2015)
- [Drake Arconis brought this change]

  build: Fix typo from OpenSSL 1.0.2 version detection fix

- [Drake Arconis brought this change]

  build: Properly detect OpenSSL 1.0.2 when using configure

- curl_multi_info_read.3: fix example formatting

Daniel Stenberg (13 Jun 2015)
- BINDINGS: there's a new R binding in town!

- BINDINGS: added the Xojo binding

Jay Satiro (11 Jun 2015)
- [Joel Depooter brought this change]

  schannel: Add support for optional client certificates
  
  Some servers will request a client certificate, but not require one.
  This change allows libcurl to connect to such servers when using
  schannel as its ssl/tls backend. When a server requests a client
  certificate, libcurl will now continue the handshake without one,
  rather than terminating the handshake. The server can then decide
  if that is acceptable or not. Prior to this change, libcurl would
  terminate the handshake, reporting a SEC_I_INCOMPLETE_CREDENTIALS
  error.

Daniel Stenberg (11 Jun 2015)
- curl_easy_cleanup.3: provide more SEE ALSO

- debug: remove http2 debug leftovers

- VERSIONS: now using markdown

- RELEASE-PROCEDURE: remove ascii logo at the top of file

- INTERNALS: absorbed docs/LIBCURL-STRUCTS

- INTERNALS: cat lib/README* >> INTERNALS
  
  and a conversion to markdown. Removed the lib/README.* files. The idea
  being to move toward having INTERNALS as the one and only "book" of
  internals documentation.
  
  Added a TOC to top of the document.

Jay Satiro (8 Jun 2015)
- openssl: LibreSSL and BoringSSL do not use TLS_client_method
  
  Although OpenSSL 1.1.0+ deprecated SSLv23_client_method in favor of
  TLS_client_method LibreSSL and BoringSSL didn't and still use
  SSLv23_client_method.
  
  Bug: https://github.com/bagder/curl/commit/49a6642#commitcomment-11578009
  Reported-by: asavah@users.noreply.github.com

Daniel Stenberg (9 Jun 2015)
- RELEASE-NOTES: synced with 20ac3458068

- CURLOPT_OPENSOCKETFUNCTION: return error at once
  
  When CURL_SOCKET_BAD is returned in the callback, it should be treated
  as an error (CURLE_COULDNT_CONNECT) if no other socket is subsequently
  created when trying to connect to a server.
  
  Bug: http://curl.haxx.se/mail/lib-2015-06/0047.html

- fopen.c: fix a few compiler warnings

- [Ville Skyttä brought this change]

  docs: Spelling fixes

- [Ville Skyttä brought this change]

  docs: man page indentation and syntax fixes

Linus Nielsen (8 Jun 2015)
- help: Add --proxy-service-name and --service-name to the --help output

Jay Satiro (7 Jun 2015)
- openssl: Fix verification of server-sent legacy intermediates
  
  - Try building a chain using issuers in the trusted store first to avoid
  problems with server-sent legacy intermediates.
  
  Prior to this change server-sent legacy intermediates with missing
  legacy issuers would cause verification to fail even if the client's CA
  bundle contained a valid replacement for the intermediate and an
  alternate chain could be constructed that would verify successfully.
  
  https://rt.openssl.org/Ticket/Display.html?id=3621&user=guest&pass=guest

Daniel Stenberg (5 Jun 2015)
- BINDINGS: update several URLs
  
  Stop linking to the curl.haxx.se anchor pages, they are usually only
  themselves pointers to the real page so better point there directly
  instead.

- BINDINGS: the curl-rust binding

- curl.h: add CURL_HTTP_VERSION_2
  
  The protocol is named "HTTP/2" after all. It is an alias for the
  existing CURL_HTTP_VERSION_2_0 enum.

- openssl: removed error string #ifdef
  
  ERR_error_string_n() was introduced in 0.9.6, no need to #ifdef anymore

- openssl: removed USERDATA_IN_PWD_CALLBACK kludge
  
  Code for OpenSSL 0.9.4 serves no purpose anymore!

- openssl: remove SSL_get_session()-using code
  
  It was present for OpenSSL 0.9.5 code but we only support 0.9.7 or
  later.

- openssl: remove dummy callback use from SSL_CTX_set_verify()
  
  The existing callback served no purpose.

- LIBCURL-STRUCTS: clarify for multiplexing

Jay Satiro (3 Jun 2015)
- cookie: Stop exporting any-domain cookies
  
  Prior to this change any-domain cookies (cookies without a domain that
  are sent to any domain) were exported with domain name "unknown".
  
  Bug: https://github.com/bagder/curl/issues/292

Daniel Stenberg (3 Jun 2015)
- RELEASE-PROCEDURE: refreshed 'coming dates'

Jay Satiro (2 Jun 2015)
- curl_setup: Change fopen text macros to use 't' for MSDOS
  
  Bug: https://github.com/bagder/curl/pull/258#issuecomment-107915198
  Reported-by: Gisle Vanem

Daniel Stenberg (2 Jun 2015)
- curl_multi_timeout.3: added example

- curl_multi_perform.3: added example

- curl_multi_info_read.3: added example

- checksrc: detect fopen() for text without the FOPEN_* macros
  
  Follow-up to e8423f9ce150 with discussionis in
  https://github.com/bagder/curl/pull/258
  
  This check scans for fopen() with a mode string without 'b' present, as
  it may indicate that an FOPEN_* define should rather be used.

- curl_getdate.3: update RFC reference

Jay Satiro (1 Jun 2015)
- curl_setup: Add macros for FOPEN_READTEXT, FOPEN_WRITETEXT
  
  - Change fopen calls to use FOPEN_READTEXT instead of "r" or "rt"
  - Change fopen calls to use FOPEN_WRITETEXT instead of "w" or "wt"
  
  This change is to explicitly specify when we need to read/write text.
  Unfortunately 't' is not part of POSIX fopen so we can't specify it
  directly. Instead we now have FOPEN_READTEXT, FOPEN_WRITETEXT.
  
  Prior to this change we had an issue on Windows if an application that
  uses libcurl overrides the default file mode to binary. The default file
  mode in Windows is normally text mode (translation mode) and that's what
  libcurl expects.
  
  Bug: https://github.com/bagder/curl/pull/258#issuecomment-107093055
  Reported-by: Orgad Shaneh

Daniel Stenberg (1 Jun 2015)
- http2-upload.c: use PIPEWAIT for playing HTTP/2 better

- http2-download: check for CURLPIPE_MULTIPLEX properly
  
  Bug: http://curl.haxx.se/mail/lib-2015-06/0001.html
  Reported-by: Rafayel Mkrtchyan

- [Isaac Boukris brought this change]

  HTTP-NTLM: fail auth on connection close instead of looping
  
  Bug: https://github.com/bagder/curl/issues/256

- 5.6 Refuse "downgrade" redirects

- README.pingpong: removed

- ROADMAP: remove HTTP/2 multiplexing - its here now

- HTTP2.md: formatted properly

- HTTP2: moved docs into docs/ and make it markdown

- README.http2: refreshed and added multiplexing info

- dist: add the http2 examples

- http2 examples: clean up some comments

- examples: added two programs doing multiplexed HTTP/2

- scripts: moved contributors.sh and contrithanks.sh into subdir

- RELEASE-NOTES: synced with c005790ff1c0a

- [Daniel Melani brought this change]

  openssl: typo in comment

Jay Satiro (27 May 2015)
- openssl: Use TLS_client_method for OpenSSL 1.1.0+
  
  SSLv23_client_method is deprecated starting in OpenSSL 1.1.0. The
  equivalent is TLS_client_method.
  
  https://github.com/openssl/openssl/commit/13c9bb3#diff-708d3ae0f2c2973b272b811315381557

Daniel Stenberg (26 May 2015)
- FAQ: How do I port libcurl to my OS?

Jay Satiro (25 May 2015)
- CURLOPT_COOKIELIST.3: Explain Set-Cookie without a domain
  
  Document that if Set-Cookie is used without a domain then the cookie is
  sent for any domain and will not be modified.
  
  Bug: http://curl.haxx.se/mail/lib-2015-05/0137.html
  Reported-by: Alexander Dyagilev

Daniel Stenberg (25 May 2015)
- [Tatsuhiro Tsujikawa brought this change]

  http2: Copy data passed in Curl_http2_switched into HTTP/2 connection buffer
  
  Previously, after seeing upgrade to HTTP/2, we feed data followed by
  upgrade response headers directly to nghttp2_session_mem_recv() in
  Curl_http2_switched().  But it turns out that passed buffer, mem, is
  part of stream->mem, and callbacks called by
  nghttp2_session_mem_recv() will write stream specific data into
  stream->mem, overwriting input data.  This will corrupt input, and
  most likely frame length error is detected by nghttp2 library.  The
  fix is first copy the passed data to HTTP/2 connection buffer,
  httpc->inbuf, and call nghttp2_session_mem_recv().

Jay Satiro (24 May 2015)
- CURLOPT_COOKIE.3: Explain that the cookies won't be modified
  
  The CURLOPT_COOKIE doc says it "sets the cookie header explicitly in the
  outgoing request(s)." However there seems to be some user confusion
  about cookie modification. Document that the cookies set by this option
  are not modified by the cookie engine.
  
  Bug: http://curl.haxx.se/mail/lib-2015-05/0115.html
  Reported-by: Alexander Dyagilev

- CURLOPT_COOKIELIST.3: Add example

Dan Fandrich (24 May 2015)
- testcurl.pl: use rel2abs to make the source directory absolute
  
  This function makes a platform-specific absolute path which uses
  backslashes on Windows. This form works when passing it on the
  command-line, as well as if the source is on another drive.

- conncache: fixed memory leak on OOM (torture tests)

Daniel Stenberg (24 May 2015)
- perl: remove subdir, not touched in 9 years

- log2changes.pl: moved to scripts/

- [Alessandro Ghedini brought this change]

  scripts: add zsh.pl for generating zsh completion

Dan Fandrich (23 May 2015)
- test1510: another flaky test

Daniel Stenberg (22 May 2015)
- security: fix "Unchecked return value" from sscanf()
  
  By (void) prefixing it and adding a comment. Did some minor related
  cleanups.
  
  Coverity CID 1299423.

- security: simplify choose_mech
  
  Coverity CID 1299424 identified dead code because of checks that could
  never equal true (if the mechanism's name was NULL).
  
  Simplified the function by removing a level of pointers and removing the
  loop and array that weren't used.

- RTSP: catch attempted unsupported requests better
  
  Replace use of assert with code that properly catches bad input at
  run-time even in non-debug builds.
  
  This flaw was sort of detected by Coverity CID 1299425 which claimed the
  "case RTSPREQ_NONE" was dead code.

- share_init: fix OOM crash
  
  A failed calloc() would lead to NULL pointer use.
  
  Coverity CID 1299427.

- parse_proxy: switch off tunneling if non-HTTP proxy
  
  non-HTTP proxy implies not using CURLOPT_HTTPPROXYTUNNEL
  
  Bug: http://curl.haxx.se/mail/lib-2015-05/0056.html
  Reported-by: Sean Boudreau

- curl: fix potential NULL dereference
  
  Coverity CID 1299428: Dereference after null check (FORWARD_NULL)

- http2: on_frame_recv: return early on stream 0
  
  Coverity CID 1299426 warned about possible NULL dereference otherwise,
  but that would only ever happen if we get invalid HTTP/2 data with
  frames for stream 0. Avoid this risk by returning early when stream 0 is
  used.

- http: removed self assignment
  
  Follow-up fix from b0143a2a33f0
  
  Detected by coverity. CID 1299429

- [Tatsuhiro Tsujikawa brought this change]

  http2: Make HTTP Upgrade work
  
  This commit just add implicitly opened stream 1 to streams hash.

Jay Satiro (22 May 2015)
- strerror: Change SEC_E_ILLEGAL_MESSAGE description
  
  Prior to this change the description for SEC_E_ILLEGAL_MESSAGE was OS
  and language specific, and invariably translated to something not very
  helpful like: "The message received was unexpected or badly formatted."
  
  Bug: https://github.com/bagder/curl/issues/267
  Reported-by: Michael Osipov

- telnet: Fix read-callback change for Windows builds
  
  Refer to b0143a2 for more information on the read-callback change.

Daniel Stenberg (21 May 2015)
- CURLOPT_HTTPPROXYTUNNEL.3: only works with a HTTP proxy!

Dan Fandrich (21 May 2015)
- testcurl.pl: allow source to be in an arbitrary directory
  
  This way, the build directory can be located on an entirely different
  filesystem from the source code (e.g. a tmpfs).

Daniel Stenberg (20 May 2015)
- read_callback: move to SessionHandle from connectdata
  
  With many easy handles using the same connection for multiplexing, it is
  important we store and keep the transfer-oriented stuff in the
  SessionHandle so that callbacks and callback data work fine even when
  many easy handles share the same physical connection.

- http2: show stream IDs in decimal
  
  It makes them easier to match output from the nghttpd test server.

- [Tatsuhiro Tsujikawa brought this change]

  http2: Faster http2 upload
  
  Previously, when we send all given buffer in data_source_callback, we
  return NGHTTP2_ERR_DEFERRED, and nghttp2 library removes this stream
  temporarily for writing.  This itself is good.  If this is the sole
  stream in the session, nghttp2_session_want_write() returns zero,
  which means that libcurl does not check writeability of the underlying
  socket.  This leads to very slow upload, because it seems curl only
  upload 16k something per 1 second.  To fix this, if we still have data
  to send, call nghttp2_session_resume_data after nghttp2_session_send.
  This makes nghttp2_session_want_write() returns nonzero (if connection
  window still opens), and as a result, socket writeability is checked,
  and upload speed becomes normal.

- [Dmitry Eremin-Solenikov brought this change]

  gtls: don't fail on non-fatal alerts during handshake
  
  Stop curl from failing when non-fatal alert is received during
  handshake.  This e.g. fixes lots of problems when working with https
  sites through proxies.

- curl_easy_unescape.3: update RFC reference
  
  Reported-by: bsammon
  Bug: https://github.com/bagder/curl/issues/282

Jay Satiro (20 May 2015)
- CURLOPT_POSTFIELDS.3: Mention curl_easy_escape
  
  .. also correct some variable naming in curl_easy_escape.3
  
  Bug: https://github.com/bagder/curl/issues/281
  Reported-by: bsammon@users.noreply.github.com

Daniel Stenberg (19 May 2015)
- [Brian Prodoehl brought this change]

  openssl: Use SSL_CTX_set_msg_callback and SSL_CTX_set_msg_callback_arg
  
  BoringSSL removed support for direct callers of SSL_CTX_callback_ctrl
  and SSL_CTX_ctrl, so move to a way that should work on BoringSSL and
  OpenSSL.
  
  re #275

Jay Satiro (19 May 2015)
- curl.1: fix missing space in section --data

Daniel Stenberg (19 May 2015)
- transfer: remove erroneous and misleading comment

Kamil Dudka (19 May 2015)
- http: silence compile-time warnings without USE_NGHTTP2
  
  Error: CLANG_WARNING:
  lib/http.c:173:16: warning: Value stored to 'http' during its initialization is never read
  
  Error: COMPILER_WARNING:
  lib/http.c: scope_hint: In function ‘http_disconnect’
  lib/http.c:173:16: warning: unused variable ‘http’ [-Wunused-variable]

Jay Satiro (19 May 2015)
- transfer: Replace __func__ instances with function name
  
  .. also make __func__ replacement in multi.
  
  Prior to this change debug builds would fail to build if the compiler
  was building pre-c99 and didn't support __func__.

Daniel Stenberg (19 May 2015)
- [Viktor Szakats brought this change]

  build: bump version in default nghttp2 paths

- INTERNALS: we require nghttp2 1.0.0+ now

Jay Satiro (18 May 2015)
- http: Add some include guards for the new HTTP/2 stuff

Daniel Stenberg (18 May 2015)
- http2: store upload state per stream
  
  Use a curl_off_t for upload left

- http2: fix build when NOT h2-enabled

- http2: switch to use Curl_hash_destroy()
  
  as after 4883f7019d3, the *_clean() function only flushes the hash.

- curlver: restore LIBCURL_VERSION_NUM defined as a full number
  
  As it breaks configure, curl-config and test 1023 if not.

- [Anthony Avina brought this change]

  hostip: fix unintended destruction of hash table
  
  .. and added unit1602 for hash.c

- curlver: introducing new version number (checking) macros

- runtests.pl: use 'h2c' now, no -14 anymore

- [Tatsuhiro Tsujikawa brought this change]

  http2: Ignore if we have stream ID not in hash in on_stream_close
  
  We could get stream ID not in the hash in on_stream_close.  For
  example, if we decided to reject stream (e.g., PUSH_PROMISE), then we
  don't create stream and store it in hash with its stream ID.

- [Tatsuhiro Tsujikawa brought this change]

  Require nghttp2 v1.0.0
  
  This commit requires nghttp2 v1.0.0 to compile, and migrate to v1.0.0,
  and utilize recent version of nghttp2 to simplify the code,
  
  First we use nghttp2_option_set_no_recv_client_magic function to
  detect nghttp2 v1.0.0.  That function only exists since v1.0.0.
  
  Since nghttp2 v0.7.5, nghttp2 ensures header field ordering, and
  validates received header field.  If it found error, RST_STREAM with
  PROTOCOL_ERROR is issued.  Since we require v1.0.0, we can utilize
  this feature to simplify libcurl code.  This commit does this.
  
  Migration from 0.7 series are done based on nghttp2 migration
  document.  For libcurl, we removed the code sending first 24 bytes
  client magic.  It is now done by nghttp2 library.
  on_invalid_frame_recv callback signature changed, and is updated
  accordingly.

- http2: infof length in on_frame_send()

- pipeline: switch some code over to functions
  
  ... to "compartmentalize" a bit and make it easier to change behavior
  when multiplexing is used instead of good old pipelining.

- symbols-in-versions: add CURLOPT_PIPEWAIT

- CURLOPT_PIPEWAIT: added
  
  By setting this option to 1 libcurl will wait for a connection to reveal
  if it is possible to pipeline/multiplex on before it continues.

- Curl_http_readwrite_headers: minor code simplification

- IsPipeliningPossible: fixed for http2

- http2: bump the h2 buffer size to 32K for speed

- http2: remove the stream from the hash in stream_close callback
  
  ... and suddenly things work much better!

- http2: if there is paused data, do not clear the drain field

- http2: rename s/data/pausedata

- http2: "stream %x" in all outputs to make it easier to search for

- http2: Curl_expire() all handles with incoming traffic
  
  ... so that they'll get handled next in the multi loop.

- http2: don't signal settings change for same values

- http2: set default concurrency, fix ConnectionExists for multiplex

- bundles: store no/default/pipeline/multiplex
  
  to allow code to act differently on the situation.
  
  Also added some more info message for the connection re-use function to
  make it clearer when connections are not re-used.

- http2: lazy init header_recvbuf
  
  It makes us use less memory when not doing HTTP/2 and subsequently also
  makes us not have to cleanup HTTP/2 related data when not using HTTP/2!

- http2: separate multiplex/pipelining + cleanup memory leaks

- CURLMOPT_PIPELINE: bit 1 is for multiplexing

- [Tatsuhiro Tsujikawa brought this change]

  http2: Fix bug that data to be drained are overwritten by pending "paused" data

- [Tatsuhiro Tsujikawa brought this change]

  http2: Don't call nghttp2_session_mem_recv while it is paused by a stream

- [Tatsuhiro Tsujikawa brought this change]

  http2: Read data left in connection buffer after pause
  
  Previously when we do pause because of out of buffer, we just throw
  away unread data in connection buffer.  This just broke protocol
  framing, and I saw occasional FRAME_SIZE_ERROR.  This commit fix this
  issue by remembering how much data read, and in the next iteration, we
  process remaining data.

- [Tatsuhiro Tsujikawa brought this change]

  http2: Fix streams get stuck
  
  This commit fixes the bug that streams get stuck if stream gets some
  DATA, and stream->closed becomes true at the same time.  Previously,
  in this condition, after we processed DATA, we are going to try to
  read data from underlying transport, but there is no data, and gets
  EAGAIN.  There was no code path to evaludate stream->closed.

- http2: store incoming h2 SETTINGS

- pipeline: move function to pipeline.c and make static
  
  ... as it was only used from there.

- IsPipeliningPossible: http2 can always "pipeline" (multiplex)

- http2: remove debug logging from on_frame_recv

- http2: remove the closed check in http2_recv
  
  With the "drained" functionality we can get here slightly asynchronously
  so the stream have have been closed but there is pending data left to
  read.

- http2: bump the h2 buffer to 8K

- http2: Curl_read should not use the single buffer
  
  ... as it does for pipelining when we're multiplexing, as we need the
  different buffers to store incoming data correctly for all streams.

- http2: more debug outputs

- http2: leave WAITPERFORM when conn is multiplexed
  
  No need to wait for our "spot" like for pipelining

- http2: force "drainage" of streams
  
  ... which is necessary since the socket won't be readable but there is
  data waiting in the buffer.

- http2: move the mem+len pair to the stream struct

- http2: more stream-oriented data, stream ID 0 is for connections

- http2: move lots of state data to the 'stream' struct
  
  ... from the connection struct. The stream one being the 'struct HTTP'
  which is kept in the SessionHandle struct (easy handle).
  
  lookup streams for incoming frames in the stream hash, hashing is based
  on the stream id and we get the SessionHandle for the incoming stream
  that way.

- HTTP: partial start at fixing up hash-lookups on http2 frame receival

- http: a stream hash for h2 multiplexing

- http: a stream hash for h2 multiplexing

- http2: debug log when receiving unexpected stream_id

- http2: move stream_id to the HTTP struct (per-stream)

- Curl_http2_setup: only do it once and enable multiplex on the server
  
  Once we know we are HTTP/2 enabled we know the server can multiplex.

- http: switch on "pipelining" (multiplexing) for HTTP/2 servers
  
  ... and do not blacklist any.

- README.pipelining: removed
  
  All the details mentioned here are better documented in man pages

Dan Fandrich (14 May 2015)
- build: removed bundles.c from make files
  
  This file was removed in commit fd137786

Daniel Stenberg (14 May 2015)
- Curl_conncache_add_conn: fix memory leak on OOM

- CURLMOPT_MAX_HOST_CONNECTIONS: host = host name + port number

- conncache: keep bundles on host+port bases, not only host names
  
  Previously we counted all connections to a specific host name and that
  would be used for the CURLMOPT_MAX_HOST_CONNECTIONS check for example,
  while servers on different port numbers are normally considered
  different "origins" on the web and should thus be considered different
  hosts.

- bundles: merged into conncache.c
  
  All the existing Curl_bundle* functions were only ever used from within
  the conncache.c file, so I moved them over and made them static (and
  removed the Curl_ prefix).

- hostcache: made all host caches use structs, not pointers
  
  This avoids unnecessary dynamic allocs and as this also removed the last
  users of *hash_alloc() and *hash_destroy(), those two functions are now
  removed.

- multi: converted socket hash into non-allocated struct
  
  avoids extra dynamic allocation

- connection cache: avoid Curl_hash_alloc()
  
  ... by using plain structs instead of pointers for the connection cache,
  we can avoid several dynamic allocations that weren't necessary.

- proxy: add newline to info message

Patrick Monnerat (8 May 2015)
- FTP: fix dangling conn->ip_addr dereference on verbose EPSV.

- FTP: Make EPSV use the control IP address rather than the original host.
  This ensures an alternate address is not used.
  Does not apply to proxy tunnel.

Daniel Stenberg (8 May 2015)
- [Alessandro Ghedini brought this change]

  tool_help: fix formatting for --next option

- [Egon Eckert brought this change]

  opts: improved the TCP keepalive examples

Jay Satiro (8 May 2015)
- winbuild: Document the option used to statically link the CRT
  
  - Document option RTLIBCFG (runtime library configuration).
  
  Bug: https://github.com/bagder/curl/issues/254
  Reported-by: Bert Huijben

- [Orgad Shaneh brought this change]

  netrc: Read in text mode when cygwin
  
  Use text mode when cygwin to eliminate trailing carriage returns.
  
  Bug: https://github.com/bagder/curl/pull/258

Patrick Monnerat (5 May 2015)
- OS400: Add SPNEGO service name options to ILE/RPG binding.

Daniel Stenberg (4 May 2015)
- curl_multi_info_read.3: fix typo
  
  Reported-by: Liviu Chircu

- MANUAL: language fix
  
  Reported-by: Fred Stluka
  Bug: https://github.com/bagder/curl/issues/255

- [Alessandro Ghedini brought this change]

  gtls: properly retrieve certificate status
  
  Also print the revocation reason if appropriate.

- OpenSSL: conditional check for SSL3_RT_HEADER
  
  The symbol is fairly new.
  
  Reported-by: Kamil Dudka

- openssl: skip trace outputs for ssl_ver == 0
  
  The OpenSSL trace callback is wonderfully undocumented but given a
  journey in the source code, it seems the cases were ssl_ver is zero
  doesn't follow the same pattern and thus turned out confusing and
  misleading. For now, we skip doing any CURLINFO_TEXT logging on those
  but keep sending them as CURLINFO_SSL_DATA_OUT/IN.
  
  Also, I added direction to the text info and I edited some functions
  slightly.
  
  Bug: https://github.com/bagder/curl/issues/219
  Reported-by: Jay Satiro, Ashish Shukla

Marc Hoersken (2 May 2015)
- schannel.c: Small changes

- schannel.c: Improve code path and readability

- schannel.c: Improve error and return code handling upon aa99a63f03

- [Chris Araman brought this change]

  schannel: fix regression in schannel_recv
  
  https://github.com/bagder/curl/issues/244
  
  Commit 145c263 changed the behavior when Curl_read_plain returns
  CURLE_AGAIN. We now handle CURLE_AGAIN and SEC_I_CONTEXT_EXPIRED
  correctly.

- Bug born in changes made several days ago 9a91e80.
  
  Commit: https://github.com/bagder/curl/commit/926cb9f
  Reported-by: Ray Satiro

Daniel Stenberg (30 Apr 2015)
- [Michael Osipov brought this change]

  configure: remove missing and make it autogenerate
  
  The missing file has not been autogenerated because a temporary fix was
  employed in acinclude.m4 which blocked update. Removed that fix and a recent
  version of missing is copied to build root.

- [Michael Osipov brought this change]

  acinclude.m4: fix test for default CA cert bundle/path
  
  test(1) on HP-UX requires a single equals sign and fails with two.
  Let's use one and make every OS happy.

- CONTRIBUTING.md: remove the sourceforge mention
  
  Reported-By: Michael Osipov

Dan Fandrich (30 Apr 2015)
- http_negotiate_sspi: added missing data variable

Daniel Stenberg (30 Apr 2015)
- [Michael Osipov brought this change]

  configure: remove --automake from libtoolize call
  
  That option is not mentioned in the man page of libtoolize 2.4.4.19-fda4.
  Moveover, a comment in line 2623 says "--automake is for 1.5 compatibility".
  
  This option is redundant now.

- [Viktor Szakats brought this change]

  build: update depedency versions, urls, example makefiles
  
  - update default versions of dependencies (except for rare/old platforms)
  - update urls
  - sync examples makefiles with main ones
  - remove line ending space

- [Michael Osipov brought this change]

  configure: remove autogenerated files by autoconf
  
  * install-sh is always regenerated
  * mkinstalldirs was already redudant years ago. Automake uses install for
    that. See: http://lists.gnu.org/archive/html/automake/2007-03/msg00015.html

- [Anders Bakken brought this change]

  curl_multi_add_handle: next is already NULL

Jay Satiro (30 Apr 2015)
- schannel: Fix out of bounds array
  
  Bug born in changes made several days ago 9a91e80.
  
  Bug: http://curl.haxx.se/mail/lib-2015-04/0199.html
  Reported-by: Brian Chrisman

- docs/libcurl: gitignore libcurl-symbols.3
  
  Bug: http://curl.haxx.se/mail/lib-2015-04/0191.html
  Reported-by: Michael Osipov

- [Viktor Szakats brought this change]

  lib/makefile.m32: add arch -m32/-m64 to LDFLAGS
  
  This fixes using a multi-target mingw distro to build curl .dll for the
  non-default target.
  (mirroring the same patch present in src/makefile.m32)

Daniel Stenberg (29 Apr 2015)
- RELEASE-NOTES: synced with cd39b944afc
  
  I've not mentioned the bug fixes that were shipped in 7.42.1 from the
  7_42 branch.

- THANKS: merged from the 7.42.1 release

- CURLOPT_HEADEROPT: default to separate
  
  Make the HTTP headers separated by default for improved security and
  reduced risk for information leakage.
  
  Bug: http://curl.haxx.se/docs/adv_20150429.html
  Reported-by: Yehezkel Horowitz, Oren Souroujon

Linus Nielsen (28 Apr 2015)
- docs/libcurl: Corrected a typo in the CURLOPT_PROXY_SERVICE_NAME documentation

Daniel Stenberg (28 Apr 2015)
- hash: simplify Curl_str_key_compare()

- dist: ship CURLOPT_PROXY_SERVICE_NAME and CURLOPT_SERVICE_NAME

- [Linus Nielsen brought this change]

  Negotiate: custom service names for SPNEGO.
  
  * Add new options, CURLOPT_PROXY_SERVICE_NAME and CURLOPT_SERVICE_NAME.
  * Add new curl options, --proxy-service-name and --service-name.

- http2: unify http_conn variable names to 'c'

- ConnectionExists: call it multi-use instead of pipelining
  
  So that it fits HTTP/2 as well

Kamil Dudka (27 Apr 2015)
- [Paul Howarth brought this change]

  nss: fix compilation failure with old versions of NSS
  
  Bug: http://curl.haxx.se/mail/lib-2015-04/0095.html

Daniel Stenberg (27 Apr 2015)
- sws: init http2 state properly
  
  It would otherwise cause problems when running tests after 1801 etc.

- curl_easy_getinfo.3: document 'internals' in CURLINFO_TLS_SESSION
  
  ... as it was previouly undocumented what the pointer was.

- runtests: use a DISABLED.local file too
  
  ... and have git ignore that. Allows for a dev to add tests to ignore in
  local tests and yet don't obstruct a normal git work flow.

Marc Hoersken (26 Apr 2015)
- schannel.c: Fix typo introduced with 3447c973d0

- schannel.c: Fix possible SEC_E_BUFFER_TOO_SMALL error
  
  Reported-by: Brian Chrisman

Daniel Stenberg (26 Apr 2015)
- schannel: re-indented file to follow curl style better
  
  white space changes only

- Curl_ossl_init: load builtin modules
  
  To have engine modules work, we must tell openssl to load builtin
  modules first.
  
  Bug: https://github.com/bagder/curl/pull/206

- configure: follow-up fix for krb5-config
  
  commit 5b66860652 was incomplete so here's a follow-up fix
  
  Reported-by: Dagobert Michelsen
  Bug: https://github.com/bagder/curl/commit/5b668606527613179d0349f21b4ab0df2971e3d2#commitcomment-10473445

- openssl: fix serial number output
  
  The code extracting the cert serial number was broken and didn't display
  it properly.
  
  Bug: https://github.com/bagder/curl/issues/235
  Reported-by: dkjjr89

- [Grant Pannell brought this change]

  sasl_sspi: Populate domain from the realm in the challenge
  
  Without this, SSPI based digest auth was broken.
  
  Bug: https://github.com/bagder/curl/pull/141.patch

Jay Satiro (25 Apr 2015)
- [Anthony Avina brought this change]

  tool: New option --data-raw to HTTP POST data, '@' allowed.
  
  Add new option --data-raw which is almost the same as --data but does
  not have a special interpretation of the @ character.
  
  Prior to this change there was no (easy) way to pass the @ character as
  the first character in POST data without it being interpreted as a
  special character.
  
  Bug: https://github.com/bagder/curl/issues/198
  Reported-by: Jens Rantil

Dan Fandrich (25 Apr 2015)
- test2039: fixed line endings that caused a test failure

Daniel Stenberg (24 Apr 2015)
- [Viktor Szakats brought this change]

  netrc: add unit tests for 'default' support

- [Viktor Szakats brought this change]

  netrc: support 'default' token
  
  The 'default' token has no argument and means to match _any_ domain.
  It must be placed last if there are 'machine <name>' tokens in the same file.
  
  See full description here:
  https://www.gnu.org/software/inetutils/manual/html_node/The-_002enetrc-File.html

- ROADMAP.md: extended the HTTP/2 section, reformatted
  
  Elaborated on several of the remaining HTTP/2 parts and made document
  use a format that ends up nicer on the web page:
  http://curl.haxx.se/dev/roadmap.html

Kamil Dudka (23 Apr 2015)
- curl -z: do not write empty file on unmet condition
  
  This commit fixes a regression introduced in curl-7_41_0-186-g261a0fe.
  It also introduces a regression test 1424 based on tests 78 and 1423.
  
  Reported-by: Viktor Szakats
  Bug: https://github.com/bagder/curl/issues/237

Dan Fandrich (23 Apr 2015)
- tool: fixed a comment typo

- README: convert to UTF-8

Jay Satiro (22 Apr 2015)
- cyassl: Implement public key pinning
  
  Also add public key extraction example to CURLOPT_PINNEDPUBLICKEY doc.

Dan Fandrich (22 Apr 2015)
- [Alessandro Ghedini brought this change]

  curl.1: fix typo

Kamil Dudka (22 Apr 2015)
- docs: distribute the CURLOPT_PINNEDPUBLICKEY(3) man page, too

- tests/unit/.gitignore: hide unit1601 and above, too

Daniel Stenberg (22 Apr 2015)
- connectionexists: follow-up to fd9d3a1ef1f
  
  PROTOPT_CREDSPERREQUEST still needs to be checked even when NTLM is not
  enabled.
  
  Mistake-caught-by: Kamil Dudka

- connectionexists: fix build without NTLM
  
  Do not access NTLM-specific struct fields when built without NTLM
  enabled!
  
  bug: http://curl.haxx.se/?i=231
  Reported-by: Patrick Rapin

- bump: start working toward 7.43.0

Kamil Dudka (22 Apr 2015)
- nss: implement public key pinning for NSS backend
  
  Bug: https://bugzilla.redhat.com/1195771

Daniel Stenberg (22 Apr 2015)
- dist: include {src,lib}/checksrc.whitelist

Version 7.42.0 (22 Apr 2015)

Daniel Stenberg (22 Apr 2015)
- RELEASE-NOTES: updated for 7.42.0

- THANKS: added contributors from 7.42.0 release notes

- THANKS-filter: a few more alterations to squash

- contrithanks.sh: helper script for maintaining THANKS

- http_done: close Negotiate connections when done
  
  When doing HTTP requests Negotiate authenticated, the entire connnection
  may become authenticated and not just the specific HTTP request which is
  otherwise how HTTP works, as Negotiate can basically use NTLM under the
  hood. curl was not adhering to this fact but would assume that such
  requests would also be authenticated per request.
  
  CVE-2015-3148
  
  Bug: http://curl.haxx.se/docs/adv_20150422B.html
  Reported-by: Isaac Boukris

- fix_hostname: zero length host name caused -1 index offset
  
  If a URL is given with a zero-length host name, like in "http://:80" or
  just ":80", `fix_hostname()` will index the host name pointer with a -1
  offset (as it blindly assumes a non-zero length) and both read and
  assign that address.
  
  CVE-2015-3144
  
  Bug: http://curl.haxx.se/docs/adv_20150422D.html
  Reported-by: Hanno Böck

- cookie: cookie parser out of boundary memory access
  
  The internal libcurl function called sanitize_cookie_path() that cleans
  up the path element as given to it from a remote site or when read from
  a file, did not properly validate the input. If given a path that
  consisted of a single double-quote, libcurl would index a newly
  allocated memory area with index -1 and assign a zero to it, thus
  destroying heap memory it wasn't supposed to.
  
  CVE-2015-3145
  
  Bug: http://curl.haxx.se/docs/adv_20150422C.html
  Reported-by: Hanno Böck

- ConnectionExists: for NTLM re-use, require credentials to match
  
  CVE-2015-3143
  
  Bug: http://curl.haxx.se/docs/adv_20150422A.html
  Reported-by: Paras Sethia

Jay Satiro (21 Apr 2015)
- [byronhe brought this change]

  openssl: add OPENSSL_NO_SSL3_METHOD check

Daniel Stenberg (20 Apr 2015)
- CURLOPT_HEADERFUNCTION.3: match parameter name in synopsis and desc
  
  Bug: https://github.com/bagder/curl/issues/229
  Reported-by: bsammon

Kamil Dudka (20 Apr 2015)
- [Mostyn Bramley-Moore brought this change]

  configure --with-nss: remove unneeded libs from the fallback

Daniel Stenberg (20 Apr 2015)
- contributors.sh: fix help output, filter out (-prefix from names

- RELEASE-NOTES: synced with cc0e7ebc3be0

- [Michael Stapelberg brought this change]

  CURLMOPT_TIMERFUNCTION.3: Clarify, add an example

- [Viktor Szakáts brought this change]

  vtls/openssl: use https in URLs and a comment typo fixed

- curl_version_info.3: fixed the 'protocols' variable type
  
  Reported-by: John Marshall
  Bug: https://github.com/bagder/curl/issues/225

Dan Fandrich (18 Apr 2015)
- test1423: added missing "file" to server section

Daniel Stenberg (17 Apr 2015)
- TheArtOfHttpScripting: Multiple URLs + Multiple HTTP methods
  
  ... and some minor edits

- Revert "HTTP: don't abort connections with pending Negotiate authentication"
  
  This reverts commit 5dc68dd6092a789bb5e0a67a1c1356ba87fdcbc6.
  
  Bug: https://github.com/bagder/curl/issues/223
  Reported-by: Michael Osipov

Jay Satiro (17 Apr 2015)
- cyassl: Fix include order
  
  Prior to this change CyaSSL's build options could redefine some generic
  build symbols.
  
  http://curl.haxx.se/mail/lib-2015-04/0069.html

Kamil Dudka (17 Apr 2015)
- configure --with-nss: drop redundant if statement

- configure --with-nss=PATH: query pkg-config if available
  
  Bug: https://github.com/bagder/curl/pull/171

Daniel Stenberg (17 Apr 2015)
- parsecfg: do not continue past a zero termination
  
  When a config file line ends without newline, the parsing function could
  continue reading beyond that point in memory.
  
  Reported-by: Hanno Böck

Jay Satiro (16 Apr 2015)
- gitignore: Ignore Windows build output directories

Daniel Stenberg (15 Apr 2015)
- RELEASE-NOTES: synced with 1ba6e4c88e0

- TODO: 17.9 Choose the name of file in braces for complex URLs

- TODO: a little caution that maybe not all ideas are still good

- TODO: 17.8 offer color-coded HTTP header output

- TODO: 17.7 warning when sending binary output to terminal

- KNOWN_BUGS: #90 IMAP "SEARCH ALL" truncates output on large boxes

Jay Satiro (14 Apr 2015)
- cyassl: Add support for TLS extension SNI

Daniel Stenberg (13 Apr 2015)
- [Matthew Hall brought this change]

  gitignore: ignore test-driver file

- [Matthew Hall brought this change]

  vtls_openssl: improve PKCS#12 load failure error message

- [Matthew Hall brought this change]

  vtls_openssl: fix minor typo in PKCS#12 load routine

- [Matthew Hall brought this change]

  vtls_openssl: improve client certificate load failure error messages

- [Matthew Hall brought this change]

  vtls_openssl: remove ambiguous SSL_CLIENT_CERT_ERR constant

- BUGS: refer to the github issue tracker now as primary

- firefox-db2pem: fix wildcard to find Firefox default profile
  
  At some point, Firefox has changed and generates different directory
  names for the default profile that made this script fail to find them.
  
  Bug: https://github.com/bagder/curl/issues/207
  Reported-by: sneakyimp

Jay Satiro (11 Apr 2015)
- cyassl: Include the CyaSSL build config
  
  CyaSSL >= 2.6.0 may have an options.h that was generated during
  its build by configure.

- build: Generate source prerequisites for Visual Studio in generate.bat
  
  Prior to this change Visual Studio builds could fail due to missing
  prerequisites src/tool_hugehelp.c and include/curl/curlbuild.h.
  
  http://curl.haxx.se/mail/lib-2015-04/0034.html

Daniel Stenberg (9 Apr 2015)
- [Viktor Szakats brought this change]

  lib/makefile.m32: add missing libs to build libcurl.dll
  
  Add 'gdi32' and 'crypt32' Windows implibs to avoid failure
  while building libcurl.dll using the mingw compiler.
  The same logic is used in 'src/makefile.m32' when
  building curl.exe.

Kamil Dudka (8 Apr 2015)
- test142[23]: verify that an empty file is stored on success

- src/tool_operate: create output file on successful download
  
  ... of an empty file
  
  Bug: https://github.com/bagder/curl/issues/183

- src/tool_cb_wrt: separate fnc for output file creation

Daniel Stenberg (7 Apr 2015)
- [Da-Yoon Chung brought this change]

  lib/transfer.c: Remove factor of 8 from sleep time calculation
  
  The factor of 8 is a bytes-to-bits conversion factor, but pkt_size and
  rate_bps are both in bytes. When using the rate limiting option, curl
  waits 8 times too long, and then transfers very quickly until the
  average rate reaches the limit. The average rate follows the limit over
  time, but the actual traffic is bursty.
  
  Thanks-to: Benjamin Gilbert

- [Jay Satiro brought this change]

  x509asn1: Silence x64 loss-of-data warning on RSA key length assignment
  
  The key length in bits will always fit in an unsigned long so the
  loss-of-data warning assigning the result of x64 pointer arithmetic to
  an unsigned long is unnecessary.

- [Jay Satiro brought this change]

  cyassl: Use CYASSL_MAX_ERROR_SZ for error buffer size
  
  Also fix it so that all ERR_error_string calls use an error buffer.
  CyaSSL's implementation of ERR_error_string only writes the error when
  an error buffer is passed.
  
  http://www.yassl.com/forums/topic599-openssl-compatibility-and-errerrorstring.html

- [Jay Satiro brought this change]

  cyassl: Remove 'Connecting to' message from cyassl_connect_step2
  
  Prior to this change libcurl could show multiple 'CyaSSL: Connecting to'
  messages since cyassl_connect_step2 is called multiple times, typically.
  The message is superfluous even once since libcurl already informs the
  user elsewhere in code that it is connecting.

- [Viktor Szakats brought this change]

  checksrc.bat: quotes to support an SRC_DIR with spaces

- hostip: fix compiler warnings
  
  introduced in the previous mini-series of 3 commits

- [Stefan Bühler brought this change]

  actually implement CURLOPT_RESOLVE removals
  
  - also log when a CURLOPT_RESOLVE entry couldn't get parsed

- [Stefan Bühler brought this change]

  move Curl_share_lock and ref counting into Curl_fetch_addr

- [Stefan Bühler brought this change]

  fix refreshing of obsolete dns cache entries
  
  - cache entries must be also refreshed when they are in use
  - have the cache count as inuse reference too, freeing timestamp == 0 special
    value
  - use timestamp == 0 for CURLOPT_RESOLVE entries which don't get refreshed
  - remove CURLOPT_RESOLVE special inuse reference (timestamp == 0 will prevent refresh)
  - fix Curl_hostcache_clean - CURLOPT_RESOLVE entries don't have a special
    reference anymore, and it would also release non CURLOPT_RESOLVE references
  - fix locking in Curl_hostcache_clean
  - fix unit1305.c: hash now keeps a reference, need to set inuse = 1

- RELEASE-NOTES: synced with abf6bddc14a

- [Jay Satiro brought this change]

  checksrc.bat: Check lib\vtls source

- [Jay Satiro brought this change]

  cyassl: Set minimum protocol version before CTX callback
  
  This change is to allow the user's CTX callback to change the minimum
  protocol version in the CTX without us later overriding it, as we did
  prior to this change.

- [Jay Satiro brought this change]

  build-openssl.bat: Fix mixed line endings
  
  Use LF not CRLF, throughout.  msysgit will only convert a file to CRLF
  on checkout if it's not mixed.

- [Jay Satiro brought this change]

  cyassl: Fix certificate load check
  
  SSL_CTX_load_verify_locations can return negative values on fail,
  therefore to check for failure we check if load is != 1 (success)
  instead of if load is == 0 (failure), the latter being incorrect given
  that behavior.

- [Tatsuhiro Tsujikawa brought this change]

  http2: Fix missing nghttp2_session_send call in Curl_http2_switched
  
  Previously in Curl_http2_switched, we called nghttp2_session_mem_recv to
  parse incoming data which were already received while curl was handling
  upgrade.  But we didn't call nghttp2_session_send, and it led to make
  curl not send any response to the received frames.  Most likely, we
  received SETTINGS from server at this point, so we missed opportunity to
  send SETTINGS + ACK.  This commit adds missing nghttp2_session_send call
  in Curl_http2_switched to fix this issue.
  
  Bug: https://github.com/bagder/curl/issues/192
  Reported-by: Stefan Eissing

- cookie: handle spaces after the name in Set-Cookie
  
  "name =value" is fine and the space should just be skipped.
  
  Updated test 31 to also test for this.
  
  Bug: https://github.com/bagder/curl/issues/195
  Reported-by: cromestant
  Help-by: Frank Gevaerts

- [Jay Satiro brought this change]

  cyassl: Fix library initialization return value
  
  (Curl_cyassl_init)
  - Return 1 on success, 0 in failure.
  
  Prior to this change the fail path returned an incorrect value and the
  evaluation to determine whether CyaSSL_Init had succeeded was incorrect.
  Ironically that combined with the way curl_global_init tests SSL library
  initialization (!Curl_ssl_init()) meant that CyaSSL having been
  successfully initialized would be seen as that even though the code path
  and return value in Curl_cyassl_init were wrong.

- [Thomas Ruecker brought this change]

  CURLOPT_HTTP200ALIASES.3: Mainly SHOUTcast servers use "ICY 200"
  
  Icecast versions 1.3.0 through 1.3.12 would reply with "ICY 200"
  under certain conditions:
  
      client_wants_icy_headers (connection_t *con)
      {
              const char *val;
  
              if (!con)
                      return 1;
  
              val = get_user_agent (con);
              if (!val || !val[0] || strcmp (val, "(null)") == 0)
                      return 1;
  
              if (con->food.client->use_icy)
                      return 1;
              if (strncasecmp (val, "winamp", 6) == 0)
                      return 1;
              if (strncasecmp (val, "Shoutcast", 9) == 0)
                      return 1;
  
              return 0;
      }
  
  So mainly if there is no 'user agent' or it is '(null)' or contains
  'winamp' or 'Shoutcast'.
  
  No mainstream distribution carries Icecast 1.3.x anymore, after all
  it was released in 2002 and superseded by Icecast 2.x.

Dan Fandrich (31 Mar 2015)
- axtls: add timeout within Curl_axtls_connect
  
  This allows test 405 to pass on axTLS.

Daniel Stenberg (30 Mar 2015)
- [Jay Satiro brought this change]

  checksrc: Windows-specific input fixes
  
  lib/config-win32ce.h
  - Fix whitespace for checksrc compliance.
  
  lib/checksrc.pl
  - Remove trailing carriage returns from input.
  
  projects/checksrc.bat
  - Ignore tool_hugehelp.c.

- [Dagobert Michelsen brought this change]

  configure: Use KRB5CONFIG for krb5-config
  
  Allows the user to easier override its path.
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1486

- multi: remove_handle: move pending connections
  
  If the handle removed from the multi handle happens to be the one
  "owning" the pipeline other transfers will be waiting indefinitely. Now
  we move such handles back to connect to have them race (again) for
  getting the connection and thus avoid hanging.
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1465
  Reported-by: Jiri Dvorak

- KNOWN_BUGS: 89 is bug #1411
  
  Disabling pipelining on multi handle with in-progress pipelined requests
  leads to heap corruption and crash

- [Jay Satiro brought this change]

  cyassl: CTX callback cosmetic changes and doc fix
  
  - More descriptive fail message for NO_FILESYSTEM builds.
  - Cosmetic changes.
  - Change more of CURLOPT_SSL_CTX_* doc to not be OpenSSL specific.

- RELEASE-NOTES: synced with d2feb71752f

Dan Fandrich (28 Mar 2015)
- tool_operate: only set SSL options if SSL is enabled

- runtests.pl: detect WolfSSL as yassl

Daniel Stenberg (27 Mar 2015)
- [Kyle L. Huff brought this change]

  cyassl: add SSL context callback support for CyaSSL
  
  Adds support for CURLOPT_SSL_CTX_FUNCTION when using CyaSSL, and better
  handles CyaSSL instances using NO_FILESYSTEM.

- [Kyle L. Huff brought this change]

  cyassl: remove undefined reference to CyaSSL_no_filesystem_verify
  
  CyaSSL_no_filesystem_verify is not (or no longer) defined by cURL or
  CyaSSL. This reference causes build errors when compiling with
  NO_FILESYSTEM.

- [Jay Satiro brought this change]

  build: Fix libcurl.sln erroneous mixed configurations
  
  Prior to this change some Release configurations had an active
  configuration assignment to their Debug counterpart.

- [Jay Satiro brought this change]

  vtls: Don't accept unknown CURLOPT_SSLVERSION values

- [Jay Satiro brought this change]

  url: Don't accept CURLOPT_SSLVERSION unless USE_SSL is defined

- [Paul Howarth brought this change]

  build: link curl to openssl libraries when openssl support is enabled
  
  This fixes a build failure where openssl and libmetalink are used
  together and the system linker does not do implicit linking (e.g.
  Fedora 13 and later releases). The MD5 functions required for
  metalink support must be pulled in from the openssl crypto library.
  
  This is similar to commit c6e7cbb94e669b85d3eb8e015ec51d0072112133,
  which fixes the same sort of problem for NSS builds.

- multi: on a request completion, check all CONNECT_PEND transfers
  
  ... even if they don't have an associated connection anymore. It could
  leave the waiting transfers pending with no active one on the
  connection.
  
  Bug: http://curl.haxx.se/bug/view.cgi?id=1465
  Reported-by: Jiri Dvorak

- [Emil Lerner brought this change]

  globbing: fix url number calculation when using range with step
  
  In function glob_range, the number of urls was multiplied by (max - min
  + 1), regardless of step. The correct formula is (max - min) / step + 1

- README.http2: refreshed and added TODO items

- [Emil Lerner brought this change]

  globbing: fix step parsing for character globbing ranges
  
  The glob_range function used wrong offset (3 instead of 4) for parsing
  integer step inside character range specification, which led to 'bad
  range' error when using character ranges with explicitly specified step
  (such as '[a-z:2]')

- polarssl: called mbedTLS in 1.3.10 and later

- polarssl: remove dead code
  
  and simplify code by changing if-elses to a switch()
  
  CID 1291706: Logically dead code. Execution cannot reach this statement

- polarssl: remove superfluous for(;;) loop
  
  "unreachable: Since the loop increment is unreachable, the loop body
  will never execute more than once."
  
  Coverity CID 1291707

- Curl_ssl_md5sum: return CURLcode
  
  ... since the funciton can fail on OOM. Check this return code.
  
  Coverity CID 1291705.

- [Jay Satiro brought this change]

  cyassl: default to highest possible TLS version
  
  (cyassl_connect_step1)
  - Use TLS 1.0-1.2 by default when available.
  
  CyaSSL/wolfSSL >= v3.3.0 supports setting a minimum protocol downgrade
  version.
  
  cyassl/cyassl@322f79f

- [Jay Satiro brought this change]

  cyassl: Check for invalid length parameter in Curl_cyassl_random

- [Jay Satiro brought this change]

  cyassl: If wolfSSL then identify as such in version string

Dan Fandrich (24 Mar 2015)
- symbols-in-versions: added CURLOPT_PATH_AS_IS

- testcurl.pl: add the --notes option to supply more info about a build
  
  Support for notes has been in place for a while, but it required
  being added to the setup file manually.

- curl_memory: make curl_memory.h the second-last header file loaded
  
  This header file must be included after all header files except
  memdebug.h, as it does similar memory function redefinitions and can be
  similarly affected by conflicting definitions in system or dependent
  library headers.

Daniel Stenberg (24 Mar 2015)
- openssl: do the OCSP work-around for libressl too
  
  I tested with libressl git master now (v2.1.4-27-g34bf96c) and it seems to
  still require the work-around for stapling to work.

- openssl: verifystatus: only use the OCSP work-around <= 1.0.2a
  
  URL: http://curl.haxx.se/mail/lib-2015-03/0205.html
  Reported-by: Alessandro Ghedini

- openssl: adapt to ASN1/X509 things gone opaque in 1.1

Dan Fandrich (24 Mar 2015)
- [Jay Satiro brought this change]

  curl_easy_setopt.3: Fix misspelling in CURLOPT_PATH_AS_IS description

- [Viktor Szakáts brought this change]

  CURLOPT_HTTPHEADER.3: fix typo in recent commit

- [Viktor Szakáts brought this change]

  CURLOPT_PATH_AS_IS.3: add type 'long' to prototype

- vtls: fix compile with --disable-crypto-auth but with SSL
  
  This is a strange combination of options, but is allowed.

Patrick Monnerat (24 Mar 2015)
- os400: define new options in ILE/RPG binding.

Daniel Stenberg (24 Mar 2015)
- RELEASE-NOTES: synced with f6878609361

- curl_easy_setopt.3: Add CURLOPT_PATH_AS_IS

- CURLOPT_PATH_AS_IS: added
  
  --path-as-is is the command line option
  
  Added docs in curl.1 and CURLOPT_PATH_AS_IS.3
  
  Added test in test 1241

- [Yamada Yasuharu brought this change]

  curl_easy_recv/send: make them work with the multi interface
  
  By making sure Curl_getconnectinfo() uses the correct connection cache
  to find the last connection.

- http2: move the init too for when its actually needed
  
  ... it would otherwise lead to memory leakage if we never actually do
  the switch.

Dan Fandrich (23 Mar 2015)
- dict: rename byte to avoid compiler shadowed declaration warning
  
  This conflicted with a WolfSSL typedef.

- cyassl: include version.h to ensure the version macros are defined

- test1513: eliminated race condition in test run
  
  It seems that some systems (e.g. fairly consistently in some recent
  Solaris autobuilds) would manage to get to the connect phase before the
  progress callback was called, resulting in a CURLE_COULDNT_CONNECT
  error. Reworked the test to point at a test server that never returns a
  full result so the progress callback always gets a chance to be called
  before the transfer can complete in some other way.

Nick Zitzmann (21 Mar 2015)
- darwinsssl: add support for TLS False Start
  
  TLS False Start support requires iOS 7.0 or later, or OS X 10.9 or later.

Daniel Stenberg (21 Mar 2015)
- gtls: add check of return code
  
  Coverity CID 1291167 pointed out that 'rc' was received but never used when
  gnutls_credentials_set() was used. Added return code check now.

- gtls: dereferencing NULL pointer
  
  Coverity CID 1291165 pointed out 'chainp' could be dereferenced when
  NULL if gnutls_certificate_get_peers() had previously failed.

- gtls: avoid uninitialized variable.
  
  Coverity CID 1291166 pointed out that we could read this variable
  uninitialized.

Dan Fandrich (21 Mar 2015)
- tests/certs: rebuild certificates with modified key usage bits
  
  The certificates were missing the digitalSignature and keyAgreement
  usage types, of which at least digitalSignature was checked by CyaSSL.
  This caused the test server in test 310 (among others) to fail the
  startup verification and therefore run (see
  http://curl.haxx.se/mail/lib-2014-07/0303.html).

- tests/certs: added make target to rebuild certificates
  
  The certificate generation scripts were also updated to better match the
  format of the certificates currently checked in.

Daniel Stenberg (21 Mar 2015)
- x509asn1: add /* fallthrough */ in switch() case

- x509asn1: minor edit to unconfuse Coverity
  
  CID 1202732 warns on the previous use, although I cannot fine any
  problems with it. I'm doing this change only to make the code use a more
  familiar approach to accomplish the same thing.

- [Dagobert Michelsen brought this change]

  testcurl: Allow '=' in values given on command line

- nss: error: unused variable 'connssl'

Dan Fandrich (21 Mar 2015)
- test938: added missing closing tags

- cyassl: use new library version macro when available

Kamil Dudka (20 Mar 2015)
- [Alessandro Ghedini brought this change]

  curl: add --false-start option

- [Alessandro Ghedini brought this change]

  nss: add support for TLS False Start

- [Alessandro Ghedini brought this change]

  url: add CURLOPT_SSL_FALSESTART option
  
  This option can be used to enable/disable TLS False Start defined in the RFC
  draft-bmoeller-tls-falsestart.

Patrick Monnerat (20 Mar 2015)
- [Alessandro Ghedini brought this change]

  gtls: implement CURLOPT_CERTINFO

Daniel Stenberg (20 Mar 2015)
- [Alessandro Ghedini brought this change]

  openssl: try to avoid accessing OCSP structs when possible

- CURLOPT_URL.3: spelling!
  
  Reported-by: Frank Gevaerts

- CURLOPT_URL.3: Added "SECURITY CONCERNS"

- CURLOPT_HTTPHEADER.3: add a "SECURITY CONCERNS" section

Dan Fandrich (19 Mar 2015)
- cyassl: detect the library as renamed wolfssl
  
  This change was made in CyaSSL/WolfSSL ver. 3.4.0

Daniel Stenberg (19 Mar 2015)
- HTTP: don't switch to HTTP/2 from 1.1 until we get the 101
  
  We prematurely changed protocol handler to HTTP/2 which made things very
  slow (and wrong).
  
  Reported-by: Stefan Eissing
  Bug: https://github.com/bagder/curl/issues/169

Dan Fandrich (19 Mar 2015)
- axtls: version 1.5.2 now requires that config.h be manually included

Daniel Stenberg (19 Mar 2015)
- metalink: fix resource leak in OOM
  
  Coverity CID 1288826

Dan Fandrich (18 Mar 2015)
- docs/libcurl: clean up libcurl-symbols.3

- docs/libcurl: check that all options with man pages are referenced
  
  If a man page exists in the opts/ directory, it must also be referenced
  either in curl_easy_setopt.3 or curl_multi_setopt.3

- curl_easy_setopt.3: added a few missing options

Kamil Dudka (18 Mar 2015)
- nss: explicitly tell NSS to disable NPN/ALPN
  
  ... if disabled at libcurl level.  Otherwise, we would allow to
  negotiate NPN despite curl was invoked with the --no-npn option.

Daniel Stenberg (18 Mar 2015)
- [Jay Satiro brought this change]

  mkhelp: Remove trailing carriage return from every line of input
  
  - Get rid of this flood of warnings in Windows mingw build:
  warning: missing terminating " character
  
  The warning is due to the carriage return. When msysgit checks out files
  from the repo by default it converts the line endings to CRLF. Prior to
  this change when mkhelp.pl processed the MANUAL and curl.1 in CRLF
  format the trailing carriage returns caused unnecessary CR in the
  output.

- RELEASE-NOTES: synced with e539f01567

- [Christian Weisgerber brought this change]

  docs/libcurl: make portability fix
  
  Using $< in a non-suffix rule context is a GNU make idiom.  This bug was
  introduced in 7.41.0.

Dan Fandrich (17 Mar 2015)
- checksrc: Fix whitelist on out-of-tree builds

Daniel Stenberg (17 Mar 2015)
- [Stefan Bühler brought this change]

  Curl_sh_entry: remove unused 'timestamp'

- HTTP: don't use Expect: headers when on HTTP/2
  
  Reported-by: Stefan Eissing
  Bug: https://github.com/bagder/curl/issues/169

- checksrc: detect and remove space before trailing semicolons

- checksrc: introduce a whitelisting concept

- checksrc: use space after comma
